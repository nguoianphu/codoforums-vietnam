<?php

class TP_yyToken implements ArrayAccess
{
    public $string = '';

    public $metadata = array();

    public function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    public function __toString()
    {
        return $this->string;
    }

    public function offsetExists($offset)
    {
        return isset($this->metadata[ $offset ]);
    }

    public function offsetGet($offset)
    {
        return $this->metadata[ $offset ];
    }

    public function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[ 0 ])) {
                $x = ($value instanceof TP_yyToken) ? $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);

                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[ $offset ] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[ $offset ] = $value;
        }
    }

    public function offsetUnset($offset)
    {
        unset($this->metadata[ $offset ]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
}

;

#line 11 "../smarty/lexer/smarty_internal_templateparser.y"

/**
 * Smarty Template Parser Class
 *
 * This is the template parser.
 * It is generated from the smarty_internal_templateparser.y file
 *
 * @author Uwe Tews <uwe.tews@googlemail.com>
 */
class Smarty_Internal_Templateparser
{
    #line 23 "../smarty/lexer/smarty_internal_templateparser.y"

    const Err1 = "Security error: Call to private object member not allowed";

    const Err2 = "Security error: Call to dynamic object member not allowed";

    const Err3 = "PHP in template not allowed. Use SmartyBC to enable it";

    /**
     * result status
     *
     * @var bool
     */
    public $successful = true;

    /**
     * return value
     *
     * @var mixed
     */
    public $retvalue = 0;

    /**
     * @var
     */
    public $yymajor;

    /**
     * last index of array variable
     *
     * @var mixed
     */
    public $last_index;

    /**
     * last variable name
     *
     * @var string
     */
    public $last_variable;

    /**
     * root parse tree buffer
     *
     * @var Smarty_Internal_ParseTree
     */
    public $root_buffer;

    /**
     * current parse tree object
     *
     * @var Smarty_Internal_ParseTree
     */
    public $current_buffer;

    /**
     * lexer object
     *
     * @var Smarty_Internal_Templatelexer
     */
    public $lex;

    /**
     * internal error flag
     *
     * @var bool
     */
    private $internalError = false;

    /**
     * {strip} status
     *
     * @var bool
     */
    public $strip = false;

    /**
     * compiler object
     *
     * @var Smarty_Internal_TemplateCompilerBase
     */
    public $compiler = null;

    /**
     * smarty object
     *
     * @var Smarty
     */
    public $smarty = null;

    /**
     * template object
     *
     * @var Smarty_Internal_Template
     */
    public $template = null;

    /**
     * block nesting level
     *
     * @var int
     */
    public $block_nesting_level = 0;

    /**
     * security object
     *
     * @var Smarty_Security
     */
    public $security = null;

    /**
     * template prefix array
     *
     * @var \Smarty_Internal_ParseTree[]
     */
    public $template_prefix = array();

    /**
     * security object
     *
     * @var \Smarty_Internal_ParseTree[]
     */
    public $template_postfix = array();

    /**
     * constructor
     *
     * @param Smarty_Internal_Templatelexer        $lex
     * @param Smarty_Internal_TemplateCompilerBase $compiler
     */
    function __construct(Smarty_Internal_Templatelexer $lex, Smarty_Internal_TemplateCompilerBase $compiler)
    {
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->template = $this->compiler->template;
        $this->smarty = $this->template->smarty;
        $this->security = isset($this->smarty->security_policy) ? $this->smarty->security_policy : false;
        $this->current_buffer = $this->root_buffer = new Smarty_Internal_ParseTree_Template();
    }

    /**
     * insert PHP code in current buffer
     *
     * @param string $code
     */
    public function insertPhpCode($code)
    {
        $this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Tag($this, $code));
    }

    /**
     *  merge PHP code with prefix code and return parse tree tag object
     *
     * @param string $code
     *
     * @return Smarty_Internal_ParseTree_Tag
     */
    public function mergePrefixCode($code)
    {
        $tmp = '';
        foreach ($this->compiler->prefix_code as $preCode) {
            $tmp .= $preCode;
        }
        $this->compiler->prefix_code = array();
        $tmp .= $code;
        return new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode($tmp, true));
    }

    const TP_VERT = 1;

    const TP_COLON = 2;

    const TP_PHP = 3;

    const TP_NOCACHE = 4;

    const TP_TEXT = 5;

    const TP_STRIPON = 6;

    const TP_STRIPOFF = 7;

    const TP_LITERALSTART = 8;

    const TP_LITERALEND = 9;

    const TP_LITERAL = 10;

    const TP_RDEL = 11;

    const TP_SIMPELOUTPUT = 12;

    const TP_LDEL = 13;

    const TP_DOLLARID = 14;

    const TP_EQUAL = 15;

    const TP_SIMPLETAG = 16;

    const TP_ID = 17;

    const TP_PTR = 18;

    const TP_LDELMAKENOCACHE = 19;

    const TP_LDELIF = 20;

    const TP_LDELFOR = 21;

    const TP_SEMICOLON = 22;

    const TP_INCDEC = 23;

    const TP_TO = 24;

    const TP_STEP = 25;

    const TP_LDELFOREACH = 26;

    const TP_SPACE = 27;

    const TP_AS = 28;

    const TP_APTR = 29;

    const TP_LDELSETFILTER = 30;

    const TP_SMARTYBLOCKCHILDPARENT = 31;

    const TP_CLOSETAG = 32;

    const TP_LDELSLASH = 33;

    const TP_ATTR = 34;

    const TP_INTEGER = 35;

    const TP_COMMA = 36;

    const TP_OPENP = 37;

    const TP_CLOSEP = 38;

    const TP_MATH = 39;

    const TP_UNIMATH = 40;

    const TP_ISIN = 41;

    const TP_INSTANCEOF = 42;

    const TP_QMARK = 43;

    const TP_NOT = 44;

    const TP_TYPECAST = 45;

    const TP_HEX = 46;

    const TP_DOT = 47;

    const TP_SINGLEQUOTESTRING = 48;

    const TP_DOUBLECOLON = 49;

    const TP_NAMESPACE = 50;

    const TP_AT = 51;

    const TP_HATCH = 52;

    const TP_OPENB = 53;

    const TP_CLOSEB = 54;

    const TP_DOLLAR = 55;

    const TP_LOGOP = 56;

    const TP_SLOGOP = 57;

    const TP_TLOGOP = 58;

    const TP_SINGLECOND = 59;

    const TP_QUOTE = 60;

    const TP_BACKTICK = 61;

    const YY_NO_ACTION = 535;

    const YY_ACCEPT_ACTION = 534;

    const YY_ERROR_ACTION = 533;

    const YY_SZ_ACTTAB = 1971;

    static public $yy_action = array(323, 9, 132, 290, 264, 80, 182, 227, 6, 84, 28, 179, 329, 99, 115, 43, 18, 280,
                                     233, 330, 284, 215, 283, 228, 236, 34, 219, 212, 41, 105, 188, 31, 42, 44, 297,
                                     216, 271, 221, 204, 449, 81, 1, 328, 324, 109, 323, 9, 133, 79, 264, 197, 449, 227,
                                     6, 84, 242, 255, 254, 232, 115, 262, 237, 224, 233, 136, 284, 215, 325, 207, 244,
                                     34, 22, 449, 41, 177, 306, 263, 42, 44, 297, 216, 217, 222, 204, 449, 81, 1, 261,
                                     324, 240, 323, 9, 135, 79, 264, 203, 26, 227, 6, 84, 326, 324, 81, 462, 115, 324,
                                     14, 304, 233, 462, 284, 215, 237, 228, 252, 34, 20, 147, 41, 211, 3, 185, 42, 44,
                                     297, 216, 271, 288, 204, 364, 81, 1, 27, 324, 317, 323, 9, 135, 79, 264, 203, 178,
                                     227, 6, 84, 188, 85, 302, 224, 115, 13, 196, 158, 233, 269, 284, 215, 105, 194, 23,
                                     34, 139, 99, 41, 211, 188, 283, 42, 44, 297, 216, 271, 270, 204, 38, 81, 1, 29,
                                     324, 36, 323, 9, 135, 79, 264, 195, 35, 227, 6, 84, 36, 91, 324, 109, 115, 21, 230,
                                     35, 233, 160, 284, 215, 324, 210, 282, 34, 180, 329, 41, 27, 23, 249, 42, 44, 297,
                                     216, 271, 291, 204, 291, 81, 1, 170, 324, 289, 323, 9, 136, 79, 264, 203, 234, 227,
                                     6, 84, 126, 78, 324, 78, 115, 100, 211, 449, 233, 136, 284, 215, 226, 228, 15, 17,
                                     99, 274, 41, 449, 308, 35, 42, 44, 297, 216, 271, 236, 204, 260, 81, 1, 105, 324,
                                     33, 323, 9, 131, 79, 264, 203, 185, 227, 6, 84, 137, 137, 81, 99, 115, 324, 10, 10,
                                     233, 140, 284, 215, 3, 228, 236, 7, 235, 142, 41, 105, 188, 90, 42, 44, 297, 216,
                                     271, 288, 204, 2, 81, 1, 92, 324, 109, 323, 9, 135, 79, 264, 199, 111, 227, 6, 84,
                                     188, 286, 16, 187, 115, 324, 287, 27, 233, 247, 284, 215, 211, 228, 304, 34, 5,
                                     153, 41, 237, 450, 93, 42, 44, 297, 216, 271, 288, 204, 223, 81, 1, 450, 324, 303,
                                     323, 9, 135, 79, 264, 193, 181, 227, 6, 84, 188, 478, 478, 161, 115, 289, 478, 162,
                                     233, 318, 284, 215, 173, 228, 462, 34, 186, 329, 41, 156, 462, 275, 42, 44, 297,
                                     216, 271, 294, 204, 288, 81, 1, 107, 324, 266, 323, 9, 134, 79, 264, 203, 119, 227,
                                     6, 84, 291, 190, 190, 333, 115, 312, 332, 155, 233, 183, 284, 215, 238, 228, 211,
                                     34, 99, 288, 41, 168, 267, 211, 42, 44, 297, 216, 271, 119, 204, 288, 81, 1, 94,
                                     324, 4, 323, 9, 136, 79, 264, 203, 176, 227, 6, 84, 211, 38, 190, 165, 115, 191,
                                     211, 143, 233, 175, 284, 215, 296, 228, 123, 17, 405, 288, 41, 288, 188, 298, 42,
                                     44, 297, 216, 271, 174, 204, 272, 81, 145, 405, 324, 257, 286, 16, 288, 79, 405,
                                     287, 288, 241, 258, 311, 314, 315, 177, 225, 211, 36, 323, 9, 285, 289, 264, 25,
                                     35, 227, 6, 84, 281, 286, 16, 149, 115, 117, 287, 182, 233, 12, 284, 215, 184, 288,
                                     265, 167, 43, 18, 280, 237, 209, 83, 118, 75, 116, 220, 40, 39, 37, 100, 291, 188,
                                     293, 276, 248, 163, 188, 205, 295, 268, 229, 274, 292, 320, 321, 322, 327, 259,
                                     265, 78, 277, 206, 316, 237, 209, 224, 128, 70, 116, 211, 253, 336, 95, 100, 243,
                                     88, 293, 276, 279, 370, 114, 205, 295, 268, 282, 274, 231, 89, 265, 138, 86, 87,
                                     208, 237, 209, 36, 118, 75, 116, 164, 289, 166, 35, 100, 309, 449, 293, 276, 172,
                                     106, 159, 205, 295, 268, 265, 274, 305, 449, 288, 237, 209, 305, 128, 70, 116, 305,
                                     310, 305, 305, 100, 305, 289, 293, 276, 305, 334, 305, 205, 295, 268, 305, 274,
                                     305, 305, 265, 305, 305, 291, 202, 237, 209, 36, 128, 58, 104, 305, 235, 305, 35,
                                     100, 154, 305, 293, 276, 305, 301, 78, 205, 295, 268, 288, 274, 323, 8, 305, 305,
                                     264, 141, 305, 227, 6, 84, 305, 289, 305, 305, 115, 288, 305, 265, 233, 305, 284,
                                     215, 237, 209, 305, 128, 51, 104, 289, 108, 305, 305, 100, 305, 305, 293, 276, 305,
                                     305, 305, 205, 295, 268, 305, 274, 265, 211, 305, 331, 30, 237, 209, 305, 128, 70,
                                     116, 189, 305, 305, 305, 100, 305, 305, 293, 276, 305, 301, 305, 205, 295, 268,
                                     305, 274, 323, 8, 305, 305, 264, 305, 201, 227, 6, 84, 305, 40, 39, 37, 115, 305,
                                     305, 265, 233, 305, 284, 215, 237, 209, 305, 128, 77, 116, 320, 321, 322, 327, 100,
                                     305, 305, 293, 276, 305, 305, 305, 205, 295, 268, 305, 274, 265, 305, 305, 319, 30,
                                     237, 209, 305, 128, 72, 116, 305, 305, 305, 305, 100, 305, 305, 293, 276, 40, 39,
                                     37, 205, 295, 268, 265, 274, 211, 305, 305, 237, 209, 305, 102, 73, 116, 320, 321,
                                     322, 327, 100, 148, 305, 293, 276, 182, 305, 305, 205, 295, 268, 288, 274, 265, 43,
                                     18, 280, 305, 237, 209, 305, 128, 54, 116, 251, 40, 39, 37, 100, 188, 305, 293,
                                     276, 305, 305, 305, 205, 295, 268, 305, 274, 265, 320, 321, 322, 327, 237, 209,
                                     211, 97, 57, 116, 305, 305, 305, 305, 100, 305, 360, 293, 276, 305, 305, 305, 205,
                                     295, 268, 265, 274, 211, 32, 305, 237, 209, 36, 128, 71, 116, 305, 305, 305, 35,
                                     100, 150, 305, 293, 276, 182, 305, 305, 205, 295, 268, 288, 274, 265, 43, 18, 280,
                                     305, 237, 209, 305, 101, 66, 116, 305, 40, 39, 37, 100, 188, 305, 293, 276, 305,
                                     305, 305, 205, 295, 268, 305, 274, 265, 320, 321, 322, 327, 237, 209, 305, 128, 58,
                                     116, 305, 305, 305, 305, 100, 305, 358, 293, 276, 305, 305, 305, 205, 295, 268,
                                     265, 274, 211, 291, 305, 237, 209, 36, 128, 62, 116, 305, 256, 305, 35, 100, 169,
                                     305, 293, 276, 182, 305, 78, 205, 295, 268, 288, 274, 265, 43, 18, 280, 305, 237,
                                     98, 305, 82, 50, 103, 305, 40, 39, 37, 100, 188, 305, 293, 276, 305, 305, 305, 205,
                                     295, 268, 305, 274, 265, 320, 321, 322, 327, 237, 209, 211, 128, 60, 116, 305, 305,
                                     305, 305, 100, 305, 402, 293, 276, 305, 305, 305, 205, 295, 268, 265, 274, 211,
                                     305, 305, 237, 96, 402, 82, 45, 103, 305, 192, 305, 402, 100, 152, 305, 293, 276,
                                     182, 305, 305, 205, 295, 268, 288, 274, 265, 43, 18, 280, 305, 237, 209, 305, 128,
                                     64, 116, 305, 40, 39, 37, 100, 188, 305, 293, 276, 305, 305, 305, 205, 295, 268,
                                     305, 274, 265, 320, 321, 322, 327, 237, 209, 305, 128, 68, 116, 305, 305, 305, 305,
                                     100, 305, 305, 293, 276, 305, 305, 305, 205, 295, 268, 265, 274, 211, 305, 305,
                                     237, 198, 305, 110, 63, 116, 478, 478, 305, 305, 100, 478, 305, 293, 276, 305, 305,
                                     305, 205, 295, 268, 305, 274, 265, 144, 305, 305, 305, 237, 209, 305, 128, 69, 116,
                                     305, 40, 39, 37, 100, 305, 305, 293, 276, 305, 305, 478, 205, 295, 268, 305, 274,
                                     265, 320, 321, 322, 327, 237, 209, 305, 128, 61, 116, 305, 305, 305, 305, 100, 305,
                                     305, 293, 276, 305, 305, 305, 205, 295, 268, 265, 274, 211, 305, 305, 237, 209,
                                     305, 112, 48, 116, 305, 250, 305, 305, 100, 157, 305, 293, 276, 182, 305, 305, 205,
                                     295, 268, 288, 274, 265, 43, 18, 280, 305, 237, 209, 305, 128, 74, 116, 305, 40,
                                     39, 37, 100, 188, 305, 293, 276, 305, 305, 305, 205, 295, 268, 305, 274, 265, 320,
                                     321, 322, 327, 237, 209, 305, 128, 67, 116, 305, 305, 305, 305, 100, 305, 403, 293,
                                     276, 305, 214, 305, 205, 295, 268, 265, 274, 211, 305, 305, 237, 209, 403, 128, 47,
                                     116, 286, 16, 305, 403, 100, 287, 449, 293, 276, 305, 305, 305, 205, 295, 268, 305,
                                     274, 265, 449, 305, 305, 305, 237, 209, 305, 128, 53, 116, 305, 40, 39, 37, 100,
                                     305, 305, 293, 276, 305, 305, 218, 205, 295, 268, 305, 274, 265, 320, 321, 322,
                                     327, 237, 209, 305, 128, 76, 116, 305, 300, 305, 305, 100, 126, 305, 293, 276, 305,
                                     100, 305, 205, 295, 268, 265, 274, 305, 299, 305, 237, 200, 274, 128, 55, 116, 305,
                                     305, 305, 305, 100, 305, 305, 293, 276, 305, 305, 305, 205, 295, 268, 305, 274,
                                     265, 305, 305, 305, 305, 237, 209, 305, 128, 49, 116, 305, 305, 305, 305, 100, 305,
                                     305, 293, 276, 305, 305, 305, 205, 295, 268, 305, 274, 265, 305, 305, 305, 305,
                                     237, 209, 305, 128, 65, 116, 305, 305, 305, 305, 100, 305, 305, 293, 276, 305, 305,
                                     305, 205, 295, 268, 265, 274, 305, 305, 305, 237, 209, 305, 128, 46, 116, 305, 305,
                                     305, 305, 100, 305, 305, 293, 276, 305, 305, 305, 205, 295, 268, 305, 274, 265,
                                     305, 305, 305, 305, 237, 209, 305, 128, 56, 116, 305, 305, 305, 305, 100, 305, 305,
                                     293, 276, 415, 415, 305, 205, 295, 268, 305, 274, 265, 305, 305, 305, 305, 237,
                                     209, 305, 128, 59, 116, 305, 305, 305, 305, 100, 305, 305, 293, 276, 211, 305, 305,
                                     205, 295, 268, 305, 274, 449, 211, 415, 415, 415, 534, 52, 245, 255, 254, 232, 335,
                                     449, 237, 305, 305, 24, 305, 36, 415, 415, 415, 415, 305, 305, 35, 305, 36, 305,
                                     305, 40, 39, 37, 305, 35, 305, 305, 305, 305, 40, 39, 37, 305, 305, 305, 305, 305,
                                     320, 321, 322, 327, 305, 305, 305, 305, 305, 320, 321, 322, 327, 478, 478, 265,
                                     305, 305, 478, 462, 237, 239, 305, 130, 305, 116, 305, 305, 305, 305, 100, 305,
                                     305, 305, 246, 305, 211, 305, 205, 295, 268, 265, 274, 305, 305, 305, 237, 239,
                                     462, 125, 462, 116, 478, 305, 462, 305, 100, 305, 305, 305, 278, 305, 36, 305, 205,
                                     295, 268, 305, 274, 35, 305, 213, 305, 305, 40, 39, 37, 305, 305, 305, 305, 478,
                                     478, 305, 22, 305, 478, 462, 305, 305, 265, 320, 321, 322, 327, 237, 239, 305, 122,
                                     305, 116, 305, 305, 305, 305, 100, 305, 305, 305, 305, 305, 305, 305, 205, 295,
                                     268, 462, 274, 462, 305, 478, 305, 462, 265, 305, 213, 305, 211, 237, 239, 305,
                                     120, 305, 116, 305, 478, 478, 305, 100, 305, 478, 462, 305, 213, 305, 305, 205,
                                     295, 268, 305, 274, 305, 305, 478, 478, 305, 19, 305, 478, 462, 305, 305, 305, 305,
                                     305, 40, 39, 37, 305, 305, 462, 305, 462, 305, 478, 305, 462, 273, 305, 305, 313,
                                     265, 320, 321, 322, 327, 237, 239, 462, 124, 462, 116, 478, 305, 462, 305, 100,
                                     286, 16, 305, 305, 305, 287, 305, 205, 295, 268, 305, 274, 305, 265, 305, 36, 305,
                                     146, 237, 239, 305, 129, 35, 116, 265, 305, 305, 305, 100, 237, 239, 305, 121, 305,
                                     116, 305, 205, 295, 268, 100, 274, 305, 213, 305, 305, 305, 305, 205, 295, 268,
                                     305, 274, 478, 478, 305, 305, 265, 478, 462, 11, 305, 237, 239, 211, 127, 305, 116,
                                     305, 305, 478, 478, 100, 305, 211, 478, 462, 305, 286, 16, 205, 295, 268, 287, 274,
                                     113, 305, 305, 462, 305, 462, 305, 478, 36, 462, 151, 305, 305, 305, 305, 35, 305,
                                     40, 39, 37, 462, 305, 462, 305, 478, 305, 462, 40, 39, 37, 211, 305, 305, 305, 320,
                                     321, 322, 327, 305, 409, 405, 305, 305, 305, 320, 321, 322, 327, 305, 307, 409,
                                     305, 409, 305, 305, 409, 405, 171, 305, 305, 305, 305, 409, 405, 409, 305, 409,
                                     305, 305, 305, 305, 305, 305, 305, 305, 224,);

    static public $yy_lookahead = array(12, 13, 14, 17, 16, 17, 77, 19, 20, 21, 15, 97, 98, 18, 26, 86, 87, 88, 30, 31,
                                        32, 33, 102, 35, 76, 37, 78, 79, 40, 81, 101, 29, 44, 45, 46, 47, 48, 51, 50,
                                        37, 52, 53, 11, 55, 49, 12, 13, 14, 60, 16, 17, 49, 19, 20, 21, 65, 66, 67, 68,
                                        26, 14, 71, 47, 30, 14, 32, 33, 17, 35, 54, 37, 15, 37, 40, 8, 9, 10, 44, 45,
                                        46, 47, 48, 47, 50, 49, 52, 53, 54, 55, 54, 12, 13, 14, 60, 16, 17, 13, 19, 20,
                                        21, 50, 55, 52, 47, 26, 55, 15, 66, 30, 53, 32, 33, 71, 35, 23, 37, 15, 73, 40,
                                        1, 37, 77, 44, 45, 46, 47, 48, 83, 50, 11, 52, 53, 36, 55, 38, 12, 13, 14, 60,
                                        16, 17, 77, 19, 20, 21, 101, 105, 106, 47, 26, 13, 14, 76, 30, 17, 32, 33, 81,
                                        35, 15, 37, 14, 18, 40, 1, 101, 102, 44, 45, 46, 47, 48, 35, 50, 2, 52, 53, 22,
                                        55, 27, 12, 13, 14, 60, 16, 17, 34, 19, 20, 21, 27, 36, 55, 49, 26, 13, 14, 34,
                                        30, 17, 32, 33, 55, 35, 95, 37, 97, 98, 40, 36, 15, 38, 44, 45, 46, 47, 48, 23,
                                        50, 23, 52, 53, 94, 55, 96, 12, 13, 14, 60, 16, 17, 72, 19, 20, 21, 76, 42, 55,
                                        42, 26, 81, 1, 37, 30, 14, 32, 33, 17, 35, 27, 37, 18, 93, 40, 49, 61, 34, 44,
                                        45, 46, 47, 48, 76, 50, 78, 52, 53, 81, 55, 29, 12, 13, 14, 60, 16, 17, 77, 19,
                                        20, 21, 47, 47, 52, 18, 26, 55, 53, 53, 30, 14, 32, 33, 37, 35, 76, 37, 78, 73,
                                        40, 81, 101, 77, 44, 45, 46, 47, 48, 83, 50, 37, 52, 53, 37, 55, 49, 12, 13, 14,
                                        60, 16, 17, 49, 19, 20, 21, 101, 12, 13, 82, 26, 55, 17, 36, 30, 38, 32, 33, 1,
                                        35, 66, 37, 36, 73, 40, 71, 37, 77, 44, 45, 46, 47, 48, 83, 50, 18, 52, 53, 49,
                                        55, 54, 12, 13, 14, 60, 16, 17, 82, 19, 20, 21, 101, 12, 13, 94, 26, 96, 17, 94,
                                        30, 106, 32, 33, 94, 35, 47, 37, 97, 98, 40, 73, 53, 98, 44, 45, 46, 47, 48, 17,
                                        50, 83, 52, 53, 81, 55, 92, 12, 13, 14, 60, 16, 17, 99, 19, 20, 21, 23, 101,
                                        101, 67, 26, 99, 70, 73, 30, 14, 32, 33, 17, 35, 1, 37, 18, 83, 40, 73, 92, 1,
                                        44, 45, 46, 47, 48, 99, 50, 83, 52, 53, 94, 55, 37, 12, 13, 14, 60, 16, 17, 77,
                                        19, 20, 21, 1, 2, 101, 52, 26, 17, 1, 73, 30, 73, 32, 33, 35, 35, 17, 37, 11,
                                        83, 40, 83, 101, 35, 44, 45, 46, 47, 48, 73, 50, 54, 52, 73, 27, 55, 54, 12, 13,
                                        83, 60, 34, 17, 83, 3, 4, 5, 6, 7, 8, 17, 1, 27, 12, 13, 17, 96, 16, 24, 34, 19,
                                        20, 21, 17, 12, 13, 73, 26, 17, 17, 77, 30, 43, 32, 33, 77, 83, 66, 52, 86, 87,
                                        88, 71, 72, 17, 74, 75, 76, 38, 39, 40, 41, 81, 23, 101, 84, 85, 5, 94, 101, 89,
                                        90, 91, 51, 93, 14, 56, 57, 58, 59, 54, 66, 42, 17, 103, 104, 71, 72, 47, 74,
                                        75, 76, 1, 17, 54, 82, 81, 38, 81, 84, 85, 83, 11, 80, 89, 90, 91, 95, 93, 18,
                                        81, 66, 81, 81, 81, 100, 71, 72, 27, 74, 75, 76, 94, 96, 94, 34, 81, 9, 37, 84,
                                        85, 73, 69, 94, 89, 90, 91, 66, 93, 107, 49, 83, 71, 72, 107, 74, 75, 76, 107,
                                        104, 107, 107, 81, 107, 96, 84, 85, 107, 11, 107, 89, 90, 91, 107, 93, 107, 107,
                                        66, 107, 107, 23, 100, 71, 72, 27, 74, 75, 76, 107, 78, 107, 34, 81, 73, 107,
                                        84, 85, 107, 5, 42, 89, 90, 91, 83, 93, 12, 13, 14, 107, 16, 73, 107, 19, 20,
                                        21, 107, 96, 107, 107, 26, 83, 107, 66, 30, 107, 32, 33, 71, 72, 107, 74, 75,
                                        76, 96, 78, 107, 107, 81, 107, 107, 84, 85, 107, 107, 107, 89, 90, 91, 107, 93,
                                        66, 1, 107, 60, 61, 71, 72, 107, 74, 75, 76, 11, 107, 107, 107, 81, 107, 107,
                                        84, 85, 107, 5, 107, 89, 90, 91, 107, 93, 12, 13, 14, 107, 16, 107, 100, 19, 20,
                                        21, 107, 39, 40, 41, 26, 107, 107, 66, 30, 107, 32, 33, 71, 72, 107, 74, 75, 76,
                                        56, 57, 58, 59, 81, 107, 107, 84, 85, 107, 107, 107, 89, 90, 91, 107, 93, 66,
                                        107, 107, 60, 61, 71, 72, 107, 74, 75, 76, 107, 107, 107, 107, 81, 107, 107, 84,
                                        85, 39, 40, 41, 89, 90, 91, 66, 93, 1, 107, 107, 71, 72, 107, 74, 75, 76, 56,
                                        57, 58, 59, 81, 73, 107, 84, 85, 77, 107, 107, 89, 90, 91, 83, 93, 66, 86, 87,
                                        88, 107, 71, 72, 107, 74, 75, 76, 38, 39, 40, 41, 81, 101, 107, 84, 85, 107,
                                        107, 107, 89, 90, 91, 107, 93, 66, 56, 57, 58, 59, 71, 72, 1, 74, 75, 76, 107,
                                        107, 107, 107, 81, 107, 11, 84, 85, 107, 107, 107, 89, 90, 91, 66, 93, 1, 2,
                                        107, 71, 72, 27, 74, 75, 76, 107, 107, 107, 34, 81, 73, 107, 84, 85, 77, 107,
                                        107, 89, 90, 91, 83, 93, 66, 86, 87, 88, 107, 71, 72, 107, 74, 75, 76, 107, 39,
                                        40, 41, 81, 101, 107, 84, 85, 107, 107, 107, 89, 90, 91, 107, 93, 66, 56, 57,
                                        58, 59, 71, 72, 107, 74, 75, 76, 107, 107, 107, 107, 81, 107, 11, 84, 85, 107,
                                        107, 107, 89, 90, 91, 66, 93, 1, 23, 107, 71, 72, 27, 74, 75, 76, 107, 11, 107,
                                        34, 81, 73, 107, 84, 85, 77, 107, 42, 89, 90, 91, 83, 93, 66, 86, 87, 88, 107,
                                        71, 72, 107, 74, 75, 76, 107, 39, 40, 41, 81, 101, 107, 84, 85, 107, 107, 107,
                                        89, 90, 91, 107, 93, 66, 56, 57, 58, 59, 71, 72, 1, 74, 75, 76, 107, 107, 107,
                                        107, 81, 107, 11, 84, 85, 107, 107, 107, 89, 90, 91, 66, 93, 1, 107, 107, 71,
                                        72, 27, 74, 75, 76, 107, 11, 107, 34, 81, 73, 107, 84, 85, 77, 107, 107, 89, 90,
                                        91, 83, 93, 66, 86, 87, 88, 107, 71, 72, 107, 74, 75, 76, 107, 39, 40, 41, 81,
                                        101, 107, 84, 85, 107, 107, 107, 89, 90, 91, 107, 93, 66, 56, 57, 58, 59, 71,
                                        72, 107, 74, 75, 76, 107, 107, 107, 107, 81, 107, 107, 84, 85, 107, 107, 107,
                                        89, 90, 91, 66, 93, 1, 107, 107, 71, 72, 107, 74, 75, 76, 12, 13, 107, 107, 81,
                                        17, 107, 84, 85, 107, 107, 107, 89, 90, 91, 107, 93, 66, 28, 107, 107, 107, 71,
                                        72, 107, 74, 75, 76, 107, 39, 40, 41, 81, 107, 107, 84, 85, 107, 107, 51, 89,
                                        90, 91, 107, 93, 66, 56, 57, 58, 59, 71, 72, 107, 74, 75, 76, 107, 107, 107,
                                        107, 81, 107, 107, 84, 85, 107, 107, 107, 89, 90, 91, 66, 93, 1, 107, 107, 71,
                                        72, 107, 74, 75, 76, 107, 11, 107, 107, 81, 73, 107, 84, 85, 77, 107, 107, 89,
                                        90, 91, 83, 93, 66, 86, 87, 88, 107, 71, 72, 107, 74, 75, 76, 107, 39, 40, 41,
                                        81, 101, 107, 84, 85, 107, 107, 107, 89, 90, 91, 107, 93, 66, 56, 57, 58, 59,
                                        71, 72, 107, 74, 75, 76, 107, 107, 107, 107, 81, 107, 11, 84, 85, 107, 15, 107,
                                        89, 90, 91, 66, 93, 1, 107, 107, 71, 72, 27, 74, 75, 76, 12, 13, 107, 34, 81,
                                        17, 37, 84, 85, 107, 107, 107, 89, 90, 91, 107, 93, 66, 49, 107, 107, 107, 71,
                                        72, 107, 74, 75, 76, 107, 39, 40, 41, 81, 107, 107, 84, 85, 107, 107, 51, 89,
                                        90, 91, 107, 93, 66, 56, 57, 58, 59, 71, 72, 107, 74, 75, 76, 107, 72, 107, 107,
                                        81, 76, 107, 84, 85, 107, 81, 107, 89, 90, 91, 66, 93, 107, 89, 107, 71, 72, 93,
                                        74, 75, 76, 107, 107, 107, 107, 81, 107, 107, 84, 85, 107, 107, 107, 89, 90, 91,
                                        107, 93, 66, 107, 107, 107, 107, 71, 72, 107, 74, 75, 76, 107, 107, 107, 107,
                                        81, 107, 107, 84, 85, 107, 107, 107, 89, 90, 91, 107, 93, 66, 107, 107, 107,
                                        107, 71, 72, 107, 74, 75, 76, 107, 107, 107, 107, 81, 107, 107, 84, 85, 107,
                                        107, 107, 89, 90, 91, 66, 93, 107, 107, 107, 71, 72, 107, 74, 75, 76, 107, 107,
                                        107, 107, 81, 107, 107, 84, 85, 107, 107, 107, 89, 90, 91, 107, 93, 66, 107,
                                        107, 107, 107, 71, 72, 107, 74, 75, 76, 107, 107, 107, 107, 81, 107, 107, 84,
                                        85, 1, 2, 107, 89, 90, 91, 107, 93, 66, 107, 107, 107, 107, 71, 72, 107, 74, 75,
                                        76, 107, 107, 107, 107, 81, 107, 107, 84, 85, 1, 107, 107, 89, 90, 91, 107, 93,
                                        37, 1, 39, 40, 41, 63, 64, 65, 66, 67, 68, 11, 49, 71, 107, 107, 25, 107, 27,
                                        56, 57, 58, 59, 107, 107, 34, 107, 27, 107, 107, 39, 40, 41, 107, 34, 107, 107,
                                        107, 107, 39, 40, 41, 107, 107, 107, 107, 107, 56, 57, 58, 59, 107, 107, 107,
                                        107, 107, 56, 57, 58, 59, 12, 13, 66, 107, 107, 17, 18, 71, 72, 107, 74, 107,
                                        76, 107, 107, 107, 107, 81, 107, 107, 107, 85, 107, 1, 107, 89, 90, 91, 66, 93,
                                        107, 107, 107, 71, 72, 47, 74, 49, 76, 51, 107, 53, 107, 81, 107, 107, 107, 85,
                                        107, 27, 107, 89, 90, 91, 107, 93, 34, 107, 2, 107, 107, 39, 40, 41, 107, 107,
                                        107, 107, 12, 13, 107, 15, 107, 17, 18, 107, 107, 66, 56, 57, 58, 59, 71, 72,
                                        107, 74, 107, 76, 107, 107, 107, 107, 81, 107, 107, 107, 107, 107, 107, 107, 89,
                                        90, 91, 47, 93, 49, 107, 51, 107, 53, 66, 107, 2, 107, 1, 71, 72, 107, 74, 107,
                                        76, 107, 12, 13, 107, 81, 107, 17, 18, 107, 2, 107, 107, 89, 90, 91, 107, 93,
                                        107, 107, 12, 13, 107, 15, 107, 17, 18, 107, 107, 107, 107, 107, 39, 40, 41,
                                        107, 107, 47, 107, 49, 107, 51, 107, 53, 54, 107, 107, 54, 66, 56, 57, 58, 59,
                                        71, 72, 47, 74, 49, 76, 51, 107, 53, 107, 81, 12, 13, 107, 107, 107, 17, 107,
                                        89, 90, 91, 107, 93, 107, 66, 107, 27, 107, 29, 71, 72, 107, 74, 34, 76, 66,
                                        107, 107, 107, 81, 71, 72, 107, 74, 107, 76, 107, 89, 90, 91, 81, 93, 107, 2,
                                        107, 107, 107, 107, 89, 90, 91, 107, 93, 12, 13, 107, 107, 66, 17, 18, 2, 107,
                                        71, 72, 1, 74, 107, 76, 107, 107, 12, 13, 81, 107, 1, 17, 18, 107, 12, 13, 89,
                                        90, 91, 17, 93, 22, 107, 107, 47, 107, 49, 107, 51, 27, 53, 29, 107, 107, 107,
                                        107, 34, 107, 39, 40, 41, 47, 107, 49, 107, 51, 107, 53, 39, 40, 41, 1, 107,
                                        107, 107, 56, 57, 58, 59, 107, 11, 11, 107, 107, 107, 56, 57, 58, 59, 107, 61,
                                        22, 107, 24, 107, 107, 27, 27, 28, 107, 107, 107, 107, 34, 34, 36, 107, 38, 107,
                                        107, 107, 107, 107, 107, 107, 107, 47,);

    const YY_SHIFT_USE_DFLT = - 15;

    const YY_SHIFT_MAX = 239;

    static public $yy_shift_ofst = array(499, 303, 78, 78, 78, 303, 258, 258, - 12, - 12, 33, 348, 393, 78, 78, 168, 78,
                                         78, 78, 78, 78, 78, 123, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
                                         168, 213, 213, 438, 438, 438, 438, 438, 438, 1567, 1558, 1649, 1649, 1649,
                                         1649, 1649, 499, 1873, 1238, 1883, 992, 1156, 508, 728, 1074, 828, 910, 1740,
                                         1320, 1320, 1320, 1320, 1320, 1320, 1320, 1320, 1320, 1320, 1320, 1320, 782,
                                         782, 50, 671, 579, 230, 889, 163, 275, 744, 1799, 1876, 483, 483, 163, 275,
                                         275, 163, 233, 459, 635, 1924, 971, 182, 510, 1053, 465, - 5, 144, 314, 66,
                                         314, 152, 410, 435, 410, 118, 147, 152, 222, 265, 336, 240, 413, 428, 428, 428,
                                         428, 428, 428, 413, 428, 428, 428, - 15, 1683, 1755, 1737, 1868, 1851, 1615,
                                         137, 1318, 359, 56, 152, 152, 152, 46, 152, 46, 152, 152, 152, 152, 46, 152,
                                         152, 152, 152, 152, 152, 91, 234, 83, 234, 234, 234, 234, 337, 234, 337, 152,
                                         152, 234, 46, 152, 234, 152, 152, 428, 606, 428, 413, 413, 172, 428, 412, 428,
                                         428, 413, 172, - 15, - 15, - 15, - 15, - 15, 1530, 1923, 1299, 1154, 35, 528,
                                         2, 194, 173, 96, 205, 308, 272, 305, 15, 296, 196, 101, - 14, 155, 380, 564,
                                         509, 437, 514, 504, 492, 487, 496, 491, 457, 446, 440, 484, 549, 529, 554, 412,
                                         525, 550, 448, 411, 547, 195, 31, 255, 392,);

    const YY_REDUCE_USE_DFLT = - 87;

    const YY_REDUCE_MAX = 192;

    static public $yy_reduce_ofst = array(1509, 469, 503, 662, 559, 533, 634, 589, 1007, 953, 1089, 1309, 925, 789, 843,
                                          817, 1445, 1145, 1117, 1171, 1063, 981, 1035, 1227, 1363, 1417, 1473, 1391,
                                          1253, 1281, 1335, 1199, 707, 735, 899, 871, 761, 1589, 1563, 1638, 1801, 1769,
                                          1758, 1671, 1729, 1016, 934, 852, 451, 770, 1016, 1180, - 10, - 71, - 71,
                                          - 71, - 71, - 71, - 71, - 71, - 71, - 71, - 71, - 71, - 71, - 71, - 71, - 71,
                                          - 71, - 71, - 71, - 71, - 71, - 71, - 71, - 71, - 71, - 71, 1315, 41, 269,
                                          159, 44, 224, - 52, 273, 418, 546, 615, 598, 361, 186, 218, 316, 109, 64, 394,
                                          199, 394, 321, 128, 199, 199, 289, 289, 128, 351, 279, 349, 343, 199, 312,
                                          199, 76, 396, 414, 289, 379, 199, - 86, 199, 199, 199, 456, 199, 199, 289,
                                          199, 199, 199, 199, 288, 288, 288, 288, 288, 288, 519, 515, 288, 288, 506,
                                          506, 506, 520, 506, 517, 506, 506, 506, 506, 505, 506, 506, 506, 506, 506,
                                          506, 511, 500, 527, 500, 500, 500, 500, 516, 500, 518, 506, 506, 500, 521,
                                          506, 500, 506, 506, 315, 551, 315, 293, 293, - 80, 315, 353, 315, 315, 293,
                                          - 80, 246, 283, 284, 501, 462,);

    static public $yyExpectedTokens = array(array(3, 4, 5, 6, 7, 8, 12, 13, 16, 19, 20, 21, 26, 30, 32, 33,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 33, 35, 37, 40, 44,
                                                  45, 46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 33, 35, 37, 40, 44,
                                                  45, 46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 54, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 53, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 55, 60,),
                                            array(12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 40, 44, 45,
                                                  46, 47, 48, 50, 52, 55, 60,),
                                            array(1, 11, 27, 34, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 25, 27, 34, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 27, 34, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 27, 34, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 27, 34, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 27, 34, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 27, 34, 39, 40, 41, 56, 57, 58, 59,),
                                            array(3, 4, 5, 6, 7, 8, 12, 13, 16, 19, 20, 21, 26, 30, 32, 33,),
                                            array(1, 22, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 11, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 39, 40, 41, 56, 57, 58, 59, 61,),
                                            array(1, 11, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 28, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 38, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 11, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 11, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 38, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 2, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 39, 40, 41, 54, 56, 57, 58, 59,),
                                            array(1, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 39, 40, 41, 56, 57, 58, 59,),
                                            array(1, 39, 40, 41, 56, 57, 58, 59,), array(39, 40, 41, 56, 57, 58, 59,),
                                            array(39, 40, 41, 56, 57, 58, 59,), array(14, 17, 50, 52, 55,),
                                            array(5, 12, 13, 14, 16, 19, 20, 21, 26, 30, 32, 33, 60, 61,),
                                            array(1, 11, 18, 27, 34, 37, 49,), array(14, 17, 52, 55,),
                                            array(1, 11, 27, 34,), array(1, 27, 34,), array(14, 37, 55,),
                                            array(5, 12, 13, 14, 16, 19, 20, 21, 26, 30, 32, 33, 60, 61,),
                                            array(12, 13, 17, 27, 29, 34,), array(12, 13, 17, 27, 29, 34,),
                                            array(12, 13, 17, 27, 34,), array(12, 13, 17, 27, 34,), array(1, 27, 34,),
                                            array(14, 37, 55,), array(14, 37, 55,), array(1, 27, 34,),
                                            array(18, 47, 53,), array(1, 2,), array(11, 23, 27, 34, 42,),
                                            array(1, 11, 27, 28, 34,), array(11, 23, 27, 34, 42,),
                                            array(13, 14, 17, 55,), array(12, 13, 17, 51,), array(1, 11, 27, 34,),
                                            array(1, 11, 27, 34,), array(15, 18, 49,), array(15, 18, 49,),
                                            array(12, 13, 17,), array(8, 9, 10,), array(12, 13, 17,), array(27, 34,),
                                            array(14, 17,), array(1, 54,), array(14, 17,), array(1, 11,),
                                            array(14, 55,), array(27, 34,), array(27, 34,), array(18, 49,),
                                            array(1, 18,), array(1, 29,), array(18,), array(1,), array(1,), array(1,),
                                            array(1,), array(1,), array(1,), array(18,), array(1,), array(1,),
                                            array(1,), array(), array(2, 12, 13, 15, 17, 18, 47, 49, 51, 53,),
                                            array(2, 12, 13, 15, 17, 18, 47, 49, 51, 53,),
                                            array(2, 12, 13, 17, 18, 47, 49, 51, 53, 54,),
                                            array(2, 12, 13, 17, 18, 47, 49, 51, 53,),
                                            array(2, 12, 13, 17, 18, 47, 49, 51, 53,),
                                            array(12, 13, 17, 18, 47, 49, 51, 53,), array(13, 14, 17, 35, 55,),
                                            array(12, 13, 17, 51,), array(12, 13, 17,), array(15, 47, 53,),
                                            array(27, 34,), array(27, 34,), array(27, 34,), array(14, 55,),
                                            array(27, 34,), array(14, 55,), array(27, 34,), array(27, 34,),
                                            array(27, 34,), array(27, 34,), array(14, 55,), array(27, 34,),
                                            array(27, 34,), array(27, 34,), array(27, 34,), array(27, 34,),
                                            array(27, 34,), array(15, 23,), array(47, 53,), array(13, 37,),
                                            array(47, 53,), array(47, 53,), array(47, 53,), array(47, 53,),
                                            array(47, 53,), array(47, 53,), array(47, 53,), array(27, 34,),
                                            array(27, 34,), array(47, 53,), array(14, 55,), array(27, 34,),
                                            array(47, 53,), array(27, 34,), array(27, 34,), array(1,), array(9,),
                                            array(1,), array(18,), array(18,), array(2,), array(1,), array(37,),
                                            array(1,), array(1,), array(18,), array(2,), array(), array(), array(),
                                            array(), array(), array(1, 2, 37, 39, 40, 41, 49, 56, 57, 58, 59,),
                                            array(11, 22, 24, 27, 34, 36, 38, 47,), array(11, 15, 27, 34, 37, 49,),
                                            array(12, 13, 17, 51,), array(37, 47, 49, 54,), array(23, 42, 54,),
                                            array(29, 37, 49,), array(23, 42, 61,), array(36, 38,), array(36, 38,),
                                            array(37, 49,), array(37, 49,), array(37, 49,), array(36, 54,),
                                            array(47, 54,), array(36, 38,), array(23, 42,), array(15, 47,),
                                            array(17, 51,), array(22, 36,), array(17,), array(17,), array(17,),
                                            array(35,), array(54,), array(17,), array(24,), array(43,), array(17,),
                                            array(17,), array(17,), array(35,), array(54,), array(52,), array(14,),
                                            array(47,), array(17,), array(37,), array(17,), array(5,), array(17,),
                                            array(52,), array(38,), array(15,), array(11,), array(37,), array(23,),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(),);

    static public $yy_default = array(340, 518, 497, 497, 497, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
                                      533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
                                      533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 399, 399,
                                      365, 399, 362, 375, 337, 533, 533, 533, 533, 404, 533, 533, 533, 533, 533, 533,
                                      410, 495, 401, 411, 406, 421, 496, 380, 519, 404, 520, 521, 427, 428, 533, 533,
                                      439, 533, 413, 399, 533, 533, 399, 399, 399, 399, 399, 533, 533, 399, 509, 389,
                                      429, 413, 429, 533, 462, 413, 413, 452, 452, 462, 533, 462, 377, 533, 413, 533,
                                      413, 533, 399, 399, 452, 393, 413, 506, 420, 430, 417, 395, 432, 424, 452, 416,
                                      413, 431, 504, 451, 451, 451, 451, 451, 451, 533, 464, 462, 478, 386, 372, 359,
                                      533, 387, 533, 361, 383, 366, 367, 533, 363, 369, 388, 378, 371, 376, 533, 487,
                                      462, 488, 490, 489, 458, 457, 456, 455, 373, 382, 460, 533, 385, 459, 384, 379,
                                      394, 353, 390, 507, 510, 498, 419, 462, 396, 446, 484, 499, 503, 462, 503, 503,
                                      462, 439, 435, 439, 463, 439, 429, 439, 429, 533, 533, 439, 447, 533, 533, 435,
                                      533, 429, 435, 533, 533, 533, 533, 533, 533, 442, 533, 407, 441, 533, 533, 533,
                                      437, 533, 533, 533, 435, 533, 478, 533, 345, 533, 533, 533, 533, 533, 508, 429,
                                      469, 343, 339, 412, 472, 338, 505, 492, 347, 493, 468, 441, 381, 400, 342, 341,
                                      483, 470, 344, 471, 408, 477, 478, 355, 368, 445, 448, 444, 443, 466, 467, 442,
                                      475, 473, 454, 486, 418, 453, 423, 397, 422, 465, 461, 502, 392, 500, 482, 481,
                                      398, 480, 501, 433, 374, 414, 415, 440, 438, 434, 436, 425, 426, 532, 525, 515,
                                      531, 528, 351, 527, 526, 350, 517, 346, 491, 476, 348, 349, 516, 494, 524, 523,
                                      511, 512, 513, 357, 479, 449, 450, 514, 356, 485, 391, 522, 352, 354, 529, 530,
                                      474,);

    const YYNOCODE = 108;

    const YYSTACKDEPTH = 500;

    const YYNSTATE = 337;

    const YYNRULE = 196;

    const YYERRORSYMBOL = 62;

    const YYERRSYMDT = 'yy0';

    const YYFALLBACK = 0;

    public static $yyFallback = array();

    public function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        $this->yyTraceFILE = $TraceFILE;
        $this->yyTracePrompt = $zTracePrompt;
    }

    public function PrintTrace()
    {
        $this->yyTraceFILE = fopen('php://output', 'w');
        $this->yyTracePrompt = '<br>';
    }

    public $yyTraceFILE;

    public $yyTracePrompt;

    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array('$', 'VERT', 'COLON', 'PHP', 'NOCACHE', 'TEXT', 'STRIPON', 'STRIPOFF', 'LITERALSTART',
                                'LITERALEND', 'LITERAL', 'RDEL', 'SIMPELOUTPUT', 'LDEL', 'DOLLARID', 'EQUAL',
                                'SIMPLETAG', 'ID', 'PTR', 'LDELMAKENOCACHE', 'LDELIF', 'LDELFOR', 'SEMICOLON', 'INCDEC',
                                'TO', 'STEP', 'LDELFOREACH', 'SPACE', 'AS', 'APTR', 'LDELSETFILTER',
                                'SMARTYBLOCKCHILDPARENT', 'CLOSETAG', 'LDELSLASH', 'ATTR', 'INTEGER', 'COMMA', 'OPENP',
                                'CLOSEP', 'MATH', 'UNIMATH', 'ISIN', 'INSTANCEOF', 'QMARK', 'NOT', 'TYPECAST', 'HEX',
                                'DOT', 'SINGLEQUOTESTRING', 'DOUBLECOLON', 'NAMESPACE', 'AT', 'HATCH', 'OPENB',
                                'CLOSEB', 'DOLLAR', 'LOGOP', 'SLOGOP', 'TLOGOP', 'SINGLECOND', 'QUOTE', 'BACKTICK',
                                'error', 'start', 'template', 'template_element', 'smartytag', 'literal',
                                'text_content', 'literal_elements', 'literal_element', 'tag', 'variable', 'attributes',
                                'value', 'expr', 'varindexed', 'modifierlist', 'statement', 'statements', 'foraction',
                                'varvar', 'modparameters', 'attribute', 'ternary', 'array', 'tlop', 'lop', 'scond',
                                'ns1', 'function', 'doublequoted_with_quotes', 'static_class_access', 'object',
                                'arrayindex', 'indexdef', 'varvarele', 'objectchain', 'objectelement', 'method',
                                'params', 'modifier', 'modparameter', 'arrayelements', 'arrayelement', 'doublequoted',
                                'doublequotedcontent',);

    public static $yyRuleName = array('start ::= template', 'template ::= template_element',
                                      'template ::= template template_element', 'template ::=',
                                      'template_element ::= smartytag', 'template_element ::= literal',
                                      'template_element ::= PHP', 'template_element ::= NOCACHE',
                                      'template_element ::= text_content', 'text_content ::= TEXT',
                                      'text_content ::= text_content TEXT', 'template_element ::= STRIPON',
                                      'template_element ::= STRIPOFF', 'literal ::= LITERALSTART LITERALEND',
                                      'literal ::= LITERALSTART literal_elements LITERALEND',
                                      'literal_elements ::= literal_elements literal_element', 'literal_elements ::=',
                                      'literal_element ::= literal', 'literal_element ::= LITERAL',
                                      'smartytag ::= tag RDEL', 'smartytag ::= SIMPELOUTPUT', 'tag ::= LDEL variable',
                                      'tag ::= LDEL variable attributes', 'tag ::= LDEL value',
                                      'tag ::= LDEL value attributes', 'tag ::= LDEL expr',
                                      'tag ::= LDEL expr attributes', 'tag ::= LDEL DOLLARID EQUAL value',
                                      'tag ::= LDEL DOLLARID EQUAL expr', 'tag ::= LDEL DOLLARID EQUAL expr attributes',
                                      'tag ::= LDEL varindexed EQUAL expr attributes', 'smartytag ::= SIMPLETAG',
                                      'tag ::= LDEL ID attributes', 'tag ::= LDEL ID',
                                      'tag ::= LDEL ID modifierlist attributes', 'tag ::= LDEL ID PTR ID attributes',
                                      'tag ::= LDEL ID PTR ID modifierlist attributes',
                                      'tag ::= LDELMAKENOCACHE DOLLARID', 'tag ::= LDELIF expr',
                                      'tag ::= LDELIF expr attributes', 'tag ::= LDELIF statement',
                                      'tag ::= LDELIF statement attributes',
                                      'tag ::= LDELFOR statements SEMICOLON expr SEMICOLON varindexed foraction attributes',
                                      'foraction ::= EQUAL expr', 'foraction ::= INCDEC',
                                      'tag ::= LDELFOR statement TO expr attributes',
                                      'tag ::= LDELFOR statement TO expr STEP expr attributes',
                                      'tag ::= LDELFOREACH attributes',
                                      'tag ::= LDELFOREACH SPACE value AS varvar attributes',
                                      'tag ::= LDELFOREACH SPACE value AS varvar APTR varvar attributes',
                                      'tag ::= LDELFOREACH SPACE expr AS varvar attributes',
                                      'tag ::= LDELFOREACH SPACE expr AS varvar APTR varvar attributes',
                                      'tag ::= LDELSETFILTER ID modparameters',
                                      'tag ::= LDELSETFILTER ID modparameters modifierlist',
                                      'tag ::= LDEL SMARTYBLOCKCHILDPARENT', 'smartytag ::= CLOSETAG',
                                      'tag ::= LDELSLASH ID', 'tag ::= LDELSLASH ID modifierlist',
                                      'tag ::= LDELSLASH ID PTR ID', 'tag ::= LDELSLASH ID PTR ID modifierlist',
                                      'attributes ::= attributes attribute', 'attributes ::= attribute',
                                      'attributes ::=', 'attribute ::= SPACE ID EQUAL ID', 'attribute ::= ATTR expr',
                                      'attribute ::= ATTR value', 'attribute ::= SPACE ID', 'attribute ::= SPACE expr',
                                      'attribute ::= SPACE value', 'attribute ::= SPACE INTEGER EQUAL expr',
                                      'statements ::= statement', 'statements ::= statements COMMA statement',
                                      'statement ::= DOLLARID EQUAL INTEGER', 'statement ::= DOLLARID EQUAL expr',
                                      'statement ::= varindexed EQUAL expr', 'statement ::= OPENP statement CLOSEP',
                                      'expr ::= value', 'expr ::= ternary', 'expr ::= DOLLARID COLON ID',
                                      'expr ::= expr MATH value', 'expr ::= expr UNIMATH value', 'expr ::= array',
                                      'expr ::= expr modifierlist', 'expr ::= expr tlop value',
                                      'expr ::= expr lop expr', 'expr ::= expr scond', 'expr ::= expr ISIN array',
                                      'expr ::= expr ISIN value', 'expr ::= variable INSTANCEOF ns1',
                                      'expr ::= variable INSTANCEOF variable',
                                      'ternary ::= OPENP expr CLOSEP QMARK DOLLARID COLON expr',
                                      'ternary ::= OPENP expr CLOSEP QMARK expr COLON expr', 'value ::= variable',
                                      'value ::= UNIMATH value', 'value ::= NOT value', 'value ::= TYPECAST value',
                                      'value ::= variable INCDEC', 'value ::= HEX', 'value ::= INTEGER',
                                      'value ::= INTEGER DOT INTEGER', 'value ::= INTEGER DOT', 'value ::= DOT INTEGER',
                                      'value ::= ID', 'value ::= function', 'value ::= OPENP expr CLOSEP',
                                      'value ::= SINGLEQUOTESTRING', 'value ::= doublequoted_with_quotes',
                                      'value ::= varindexed DOUBLECOLON static_class_access', 'value ::= smartytag',
                                      'value ::= value modifierlist', 'value ::= NAMESPACE',
                                      'value ::= ns1 DOUBLECOLON static_class_access', 'ns1 ::= ID',
                                      'ns1 ::= NAMESPACE', 'variable ::= DOLLARID', 'variable ::= varindexed',
                                      'variable ::= varvar AT ID', 'variable ::= object', 'variable ::= HATCH ID HATCH',
                                      'variable ::= HATCH ID HATCH arrayindex', 'variable ::= HATCH variable HATCH',
                                      'variable ::= HATCH variable HATCH arrayindex',
                                      'varindexed ::= DOLLARID arrayindex', 'varindexed ::= varvar arrayindex',
                                      'arrayindex ::= arrayindex indexdef', 'arrayindex ::=',
                                      'indexdef ::= DOT DOLLARID', 'indexdef ::= DOT varvar',
                                      'indexdef ::= DOT varvar AT ID', 'indexdef ::= DOT ID',
                                      'indexdef ::= DOT INTEGER', 'indexdef ::= DOT LDEL expr RDEL',
                                      'indexdef ::= OPENB ID CLOSEB', 'indexdef ::= OPENB ID DOT ID CLOSEB',
                                      'indexdef ::= OPENB SINGLEQUOTESTRING CLOSEB',
                                      'indexdef ::= OPENB INTEGER CLOSEB', 'indexdef ::= OPENB DOLLARID CLOSEB',
                                      'indexdef ::= OPENB variable CLOSEB', 'indexdef ::= OPENB value CLOSEB',
                                      'indexdef ::= OPENB expr CLOSEB', 'indexdef ::= OPENB CLOSEB',
                                      'varvar ::= DOLLARID', 'varvar ::= DOLLAR', 'varvar ::= varvar varvarele',
                                      'varvarele ::= ID', 'varvarele ::= SIMPELOUTPUT', 'varvarele ::= LDEL expr RDEL',
                                      'object ::= varindexed objectchain', 'objectchain ::= objectelement',
                                      'objectchain ::= objectchain objectelement',
                                      'objectelement ::= PTR ID arrayindex', 'objectelement ::= PTR varvar arrayindex',
                                      'objectelement ::= PTR LDEL expr RDEL arrayindex',
                                      'objectelement ::= PTR ID LDEL expr RDEL arrayindex',
                                      'objectelement ::= PTR method', 'function ::= ns1 OPENP params CLOSEP',
                                      'method ::= ID OPENP params CLOSEP', 'method ::= DOLLARID OPENP params CLOSEP',
                                      'params ::= params COMMA expr', 'params ::= expr', 'params ::=',
                                      'modifierlist ::= modifierlist modifier modparameters',
                                      'modifierlist ::= modifier modparameters', 'modifier ::= VERT AT ID',
                                      'modifier ::= VERT ID', 'modparameters ::= modparameters modparameter',
                                      'modparameters ::=', 'modparameter ::= COLON value',
                                      'modparameter ::= COLON array', 'static_class_access ::= method',
                                      'static_class_access ::= method objectchain', 'static_class_access ::= ID',
                                      'static_class_access ::= DOLLARID arrayindex',
                                      'static_class_access ::= DOLLARID arrayindex objectchain', 'lop ::= LOGOP',
                                      'lop ::= SLOGOP', 'tlop ::= TLOGOP', 'scond ::= SINGLECOND',
                                      'array ::= OPENB arrayelements CLOSEB', 'arrayelements ::= arrayelement',
                                      'arrayelements ::= arrayelements COMMA arrayelement', 'arrayelements ::=',
                                      'arrayelement ::= value APTR expr', 'arrayelement ::= ID APTR expr',
                                      'arrayelement ::= expr', 'doublequoted_with_quotes ::= QUOTE QUOTE',
                                      'doublequoted_with_quotes ::= QUOTE doublequoted QUOTE',
                                      'doublequoted ::= doublequoted doublequotedcontent',
                                      'doublequoted ::= doublequotedcontent',
                                      'doublequotedcontent ::= BACKTICK variable BACKTICK',
                                      'doublequotedcontent ::= BACKTICK expr BACKTICK',
                                      'doublequotedcontent ::= DOLLARID', 'doublequotedcontent ::= LDEL variable RDEL',
                                      'doublequotedcontent ::= LDEL expr RDEL', 'doublequotedcontent ::= smartytag',
                                      'doublequotedcontent ::= TEXT',);

    public function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[ $tokenType ];
        } else {
            return "Unknown";
        }
    }

    public static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:
                break;   /* If no destructor action specified: do nothing */
        }
    }

    public function yy_pop_parser_stack()
    {
        if (empty($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if ($this->yyTraceFILE && $this->yyidx >= 0) {
            fwrite($this->yyTraceFILE, $this->yyTracePrompt . 'Popping ' . $this->yyTokenName[ $yytos->major ] . "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx --;

        return $yymajor;
    }

    public function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource($this->yyTraceFILE)) {
            fclose($this->yyTraceFILE);
        }
    }

    public function yy_get_expected_tokens($token)
    {
        static $res3 = array();
        static $res4 = array();
        $state = $this->yystack[ $this->yyidx ]->stateno;
        $expected = self::$yyExpectedTokens[ $state ];
        if (isset($res3[ $state ][ $token ])) {
            if ($res3[ $state ][ $token ]) {
                return $expected;
            }
        } else {
            if ($res3[ $state ][ $token ] = in_array($token, self::$yyExpectedTokens[ $state ], true)) {
                return $expected;
            }
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done ++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[ $yyruleno ][ 1 ];
                    $nextstate = $this->yy_find_reduce_action($this->yystack[ $this->yyidx ]->stateno,
                                                              self::$yyRuleInfo[ $yyruleno ][ 0 ]);
                    if (isset(self::$yyExpectedTokens[ $nextstate ])) {
                        $expected = array_merge($expected, self::$yyExpectedTokens[ $nextstate ]);
                        if (isset($res4[ $nextstate ][ $token ])) {
                            if ($res4[ $nextstate ][ $token ]) {
                                $this->yyidx = $yyidx;
                                $this->yystack = $stack;
                                return array_unique($expected);
                            }
                        } else {
                            if ($res4[ $nextstate ][ $token ] =
                                in_array($token, self::$yyExpectedTokens[ $nextstate ], true)
                            ) {
                                $this->yyidx = $yyidx;
                                $this->yystack = $stack;
                                return array_unique($expected);
                            }
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx ++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[ $yyruleno ][ 0 ];
                        $this->yystack[ $this->yyidx ] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                }
                while (true);
            }
            break;
        }
        while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return array_unique($expected);
    }

    public function yy_is_expected_token($token)
    {
        static $res = array();
        static $res2 = array();
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[ $this->yyidx ]->stateno;
        if (isset($res[ $state ][ $token ])) {
            if ($res[ $state ][ $token ]) {
                return true;
            }
        } else {
            if ($res[ $state ][ $token ] = in_array($token, self::$yyExpectedTokens[ $state ], true)) {
                return true;
            }
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done ++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[ $yyruleno ][ 1 ];
                    $nextstate = $this->yy_find_reduce_action($this->yystack[ $this->yyidx ]->stateno,
                                                              self::$yyRuleInfo[ $yyruleno ][ 0 ]);
                    if (isset($res2[ $nextstate ][ $token ])) {
                        if ($res2[ $nextstate ][ $token ]) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return true;
                        }
                    } else {
                        if ($res2[ $nextstate ][ $token ] = (isset(self::$yyExpectedTokens[ $nextstate ]) &&
                                                             in_array($token, self::$yyExpectedTokens[ $nextstate ],
                                                                      true))
                        ) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return true;
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx ++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[ $yyruleno ][ 0 ];
                        $this->yystack[ $this->yyidx ] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                }
                while (true);
            }
            break;
        }
        while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return true;
    }

    public function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[ $this->yyidx ]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[ $stateno ])) {
            // no shift actions
            return self::$yy_default[ $stateno ];
        }
        $i = self::$yy_shift_ofst[ $stateno ];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[ $stateno ];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB || self::$yy_lookahead[ $i ] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback) &&
                ($iFallback = self::$yyFallback[ $iLookAhead ]) != 0
            ) {
                if ($this->yyTraceFILE) {
                    fwrite($this->yyTraceFILE,
                           $this->yyTracePrompt . "FALLBACK " . $this->yyTokenName[ $iLookAhead ] . " => " .
                           $this->yyTokenName[ $iFallback ] . "\n");
                }

                return $this->yy_find_shift_action($iFallback);
            }

            return self::$yy_default[ $stateno ];
        } else {
            return self::$yy_action[ $i ];
        }
    }

    public function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[ $stateno ])) {
            return self::$yy_default[ $stateno ];
        }
        $i = self::$yy_reduce_ofst[ $stateno ];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[ $stateno ];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB || self::$yy_lookahead[ $i ] != $iLookAhead) {
            return self::$yy_default[ $stateno ];
        } else {
            return self::$yy_action[ $i ];
        }
    }

    public function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx ++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx --;
            if ($this->yyTraceFILE) {
                fprintf($this->yyTraceFILE, "%sStack Overflow!\n", $this->yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
            #line 207 "../smarty/lexer/smarty_internal_templateparser.y"

            $this->internalError = true;
            $this->compiler->trigger_template_error("Stack overflow in template parser");

            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        $this->yystack[] = $yytos;
        if ($this->yyTraceFILE && $this->yyidx > 0) {
            fprintf($this->yyTraceFILE, "%sShift %d\n", $this->yyTracePrompt, $yyNewState);
            fprintf($this->yyTraceFILE, "%sStack:", $this->yyTracePrompt);
            for ($i = 1; $i <= $this->yyidx; $i ++) {
                fprintf($this->yyTraceFILE, " %s", $this->yyTokenName[ $this->yystack[ $i ]->major ]);
            }
            fwrite($this->yyTraceFILE, "\n");
        }
    }

    public static $yyRuleInfo = array(array(0 => 63, 1 => 1), array(0 => 64, 1 => 1), array(0 => 64, 1 => 2),
                                      array(0 => 64, 1 => 0), array(0 => 65, 1 => 1), array(0 => 65, 1 => 1),
                                      array(0 => 65, 1 => 1), array(0 => 65, 1 => 1), array(0 => 65, 1 => 1),
                                      array(0 => 68, 1 => 1), array(0 => 68, 1 => 2), array(0 => 65, 1 => 1),
                                      array(0 => 65, 1 => 1), array(0 => 67, 1 => 2), array(0 => 67, 1 => 3),
                                      array(0 => 69, 1 => 2), array(0 => 69, 1 => 0), array(0 => 70, 1 => 1),
                                      array(0 => 70, 1 => 1), array(0 => 66, 1 => 2), array(0 => 66, 1 => 1),
                                      array(0 => 71, 1 => 2), array(0 => 71, 1 => 3), array(0 => 71, 1 => 2),
                                      array(0 => 71, 1 => 3), array(0 => 71, 1 => 2), array(0 => 71, 1 => 3),
                                      array(0 => 71, 1 => 4), array(0 => 71, 1 => 4), array(0 => 71, 1 => 5),
                                      array(0 => 71, 1 => 5), array(0 => 66, 1 => 1), array(0 => 71, 1 => 3),
                                      array(0 => 71, 1 => 2), array(0 => 71, 1 => 4), array(0 => 71, 1 => 5),
                                      array(0 => 71, 1 => 6), array(0 => 71, 1 => 2), array(0 => 71, 1 => 2),
                                      array(0 => 71, 1 => 3), array(0 => 71, 1 => 2), array(0 => 71, 1 => 3),
                                      array(0 => 71, 1 => 8), array(0 => 80, 1 => 2), array(0 => 80, 1 => 1),
                                      array(0 => 71, 1 => 5), array(0 => 71, 1 => 7), array(0 => 71, 1 => 2),
                                      array(0 => 71, 1 => 6), array(0 => 71, 1 => 8), array(0 => 71, 1 => 6),
                                      array(0 => 71, 1 => 8), array(0 => 71, 1 => 3), array(0 => 71, 1 => 4),
                                      array(0 => 71, 1 => 2), array(0 => 66, 1 => 1), array(0 => 71, 1 => 2),
                                      array(0 => 71, 1 => 3), array(0 => 71, 1 => 4), array(0 => 71, 1 => 5),
                                      array(0 => 73, 1 => 2), array(0 => 73, 1 => 1), array(0 => 73, 1 => 0),
                                      array(0 => 83, 1 => 4), array(0 => 83, 1 => 2), array(0 => 83, 1 => 2),
                                      array(0 => 83, 1 => 2), array(0 => 83, 1 => 2), array(0 => 83, 1 => 2),
                                      array(0 => 83, 1 => 4), array(0 => 79, 1 => 1), array(0 => 79, 1 => 3),
                                      array(0 => 78, 1 => 3), array(0 => 78, 1 => 3), array(0 => 78, 1 => 3),
                                      array(0 => 78, 1 => 3), array(0 => 75, 1 => 1), array(0 => 75, 1 => 1),
                                      array(0 => 75, 1 => 3), array(0 => 75, 1 => 3), array(0 => 75, 1 => 3),
                                      array(0 => 75, 1 => 1), array(0 => 75, 1 => 2), array(0 => 75, 1 => 3),
                                      array(0 => 75, 1 => 3), array(0 => 75, 1 => 2), array(0 => 75, 1 => 3),
                                      array(0 => 75, 1 => 3), array(0 => 75, 1 => 3), array(0 => 75, 1 => 3),
                                      array(0 => 84, 1 => 7), array(0 => 84, 1 => 7), array(0 => 74, 1 => 1),
                                      array(0 => 74, 1 => 2), array(0 => 74, 1 => 2), array(0 => 74, 1 => 2),
                                      array(0 => 74, 1 => 2), array(0 => 74, 1 => 1), array(0 => 74, 1 => 1),
                                      array(0 => 74, 1 => 3), array(0 => 74, 1 => 2), array(0 => 74, 1 => 2),
                                      array(0 => 74, 1 => 1), array(0 => 74, 1 => 1), array(0 => 74, 1 => 3),
                                      array(0 => 74, 1 => 1), array(0 => 74, 1 => 1), array(0 => 74, 1 => 3),
                                      array(0 => 74, 1 => 1), array(0 => 74, 1 => 2), array(0 => 74, 1 => 1),
                                      array(0 => 74, 1 => 3), array(0 => 89, 1 => 1), array(0 => 89, 1 => 1),
                                      array(0 => 72, 1 => 1), array(0 => 72, 1 => 1), array(0 => 72, 1 => 3),
                                      array(0 => 72, 1 => 1), array(0 => 72, 1 => 3), array(0 => 72, 1 => 4),
                                      array(0 => 72, 1 => 3), array(0 => 72, 1 => 4), array(0 => 76, 1 => 2),
                                      array(0 => 76, 1 => 2), array(0 => 94, 1 => 2), array(0 => 94, 1 => 0),
                                      array(0 => 95, 1 => 2), array(0 => 95, 1 => 2), array(0 => 95, 1 => 4),
                                      array(0 => 95, 1 => 2), array(0 => 95, 1 => 2), array(0 => 95, 1 => 4),
                                      array(0 => 95, 1 => 3), array(0 => 95, 1 => 5), array(0 => 95, 1 => 3),
                                      array(0 => 95, 1 => 3), array(0 => 95, 1 => 3), array(0 => 95, 1 => 3),
                                      array(0 => 95, 1 => 3), array(0 => 95, 1 => 3), array(0 => 95, 1 => 2),
                                      array(0 => 81, 1 => 1), array(0 => 81, 1 => 1), array(0 => 81, 1 => 2),
                                      array(0 => 96, 1 => 1), array(0 => 96, 1 => 1), array(0 => 96, 1 => 3),
                                      array(0 => 93, 1 => 2), array(0 => 97, 1 => 1), array(0 => 97, 1 => 2),
                                      array(0 => 98, 1 => 3), array(0 => 98, 1 => 3), array(0 => 98, 1 => 5),
                                      array(0 => 98, 1 => 6), array(0 => 98, 1 => 2), array(0 => 90, 1 => 4),
                                      array(0 => 99, 1 => 4), array(0 => 99, 1 => 4), array(0 => 100, 1 => 3),
                                      array(0 => 100, 1 => 1), array(0 => 100, 1 => 0), array(0 => 77, 1 => 3),
                                      array(0 => 77, 1 => 2), array(0 => 101, 1 => 3), array(0 => 101, 1 => 2),
                                      array(0 => 82, 1 => 2), array(0 => 82, 1 => 0), array(0 => 102, 1 => 2),
                                      array(0 => 102, 1 => 2), array(0 => 92, 1 => 1), array(0 => 92, 1 => 2),
                                      array(0 => 92, 1 => 1), array(0 => 92, 1 => 2), array(0 => 92, 1 => 3),
                                      array(0 => 87, 1 => 1), array(0 => 87, 1 => 1), array(0 => 86, 1 => 1),
                                      array(0 => 88, 1 => 1), array(0 => 85, 1 => 3), array(0 => 103, 1 => 1),
                                      array(0 => 103, 1 => 3), array(0 => 103, 1 => 0), array(0 => 104, 1 => 3),
                                      array(0 => 104, 1 => 3), array(0 => 104, 1 => 1), array(0 => 91, 1 => 2),
                                      array(0 => 91, 1 => 3), array(0 => 105, 1 => 2), array(0 => 105, 1 => 1),
                                      array(0 => 106, 1 => 3), array(0 => 106, 1 => 3), array(0 => 106, 1 => 1),
                                      array(0 => 106, 1 => 3), array(0 => 106, 1 => 3), array(0 => 106, 1 => 1),
                                      array(0 => 106, 1 => 1),);

    public static $yyReduceMap = array(0 => 0, 1 => 1, 2 => 2, 4 => 4, 5 => 5, 6 => 6, 7 => 7, 8 => 8, 9 => 9, 17 => 9,
                                       18 => 9, 44 => 9, 67 => 9, 68 => 9, 76 => 9, 77 => 9, 81 => 9, 92 => 9, 97 => 9,
                                       98 => 9, 103 => 9, 105 => 9, 106 => 9, 110 => 9, 112 => 9, 117 => 9, 179 => 9,
                                       184 => 9, 10 => 10, 11 => 11, 12 => 12, 13 => 13, 16 => 13, 14 => 14, 75 => 14,
                                       15 => 15, 93 => 15, 95 => 15, 96 => 15, 124 => 15, 19 => 19, 20 => 20, 21 => 21,
                                       23 => 21, 25 => 21, 22 => 22, 24 => 22, 26 => 22, 27 => 27, 28 => 27, 29 => 29,
                                       30 => 30, 31 => 31, 32 => 32, 33 => 33, 34 => 34, 35 => 35, 36 => 36, 37 => 37,
                                       38 => 38, 39 => 39, 41 => 39, 40 => 40, 42 => 42, 43 => 43, 45 => 45, 46 => 46,
                                       47 => 47, 48 => 48, 50 => 48, 49 => 49, 51 => 49, 52 => 52, 53 => 53, 54 => 54,
                                       55 => 55, 56 => 56, 57 => 57, 58 => 58, 59 => 59, 60 => 60, 61 => 61, 70 => 61,
                                       159 => 61, 163 => 61, 167 => 61, 168 => 61, 62 => 62, 160 => 62, 166 => 62,
                                       63 => 63, 64 => 64, 65 => 64, 66 => 66, 144 => 66, 69 => 69, 71 => 71, 72 => 72,
                                       73 => 72, 74 => 74, 78 => 78, 79 => 79, 80 => 79, 82 => 82, 109 => 82, 83 => 83,
                                       84 => 84, 85 => 85, 86 => 86, 87 => 87, 88 => 88, 89 => 88, 90 => 90, 91 => 91,
                                       94 => 94, 99 => 99, 100 => 100, 101 => 101, 102 => 102, 104 => 104, 107 => 107,
                                       108 => 108, 111 => 111, 113 => 113, 114 => 114, 115 => 115, 116 => 116,
                                       118 => 118, 119 => 119, 120 => 120, 121 => 121, 122 => 122, 123 => 123,
                                       125 => 125, 181 => 125, 126 => 126, 127 => 127, 128 => 128, 129 => 129,
                                       130 => 130, 131 => 131, 139 => 131, 132 => 132, 133 => 133, 134 => 134,
                                       135 => 134, 137 => 134, 138 => 134, 136 => 136, 140 => 140, 141 => 141,
                                       142 => 142, 185 => 142, 143 => 143, 145 => 145, 146 => 146, 147 => 147,
                                       148 => 148, 149 => 149, 150 => 150, 151 => 151, 152 => 152, 153 => 153,
                                       154 => 154, 155 => 155, 156 => 156, 157 => 157, 158 => 158, 161 => 161,
                                       162 => 162, 164 => 164, 165 => 165, 169 => 169, 170 => 170, 171 => 171,
                                       172 => 172, 173 => 173, 174 => 174, 175 => 175, 176 => 176, 177 => 177,
                                       178 => 178, 180 => 180, 182 => 182, 183 => 183, 186 => 186, 187 => 187,
                                       188 => 188, 189 => 189, 190 => 189, 192 => 189, 191 => 191, 193 => 193,
                                       194 => 194, 195 => 195,);

    #line 218 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r0()
    {
        $this->root_buffer->prepend_array($this, $this->template_prefix);
        $this->root_buffer->append_array($this, $this->template_postfix);
        $this->_retvalue = $this->root_buffer->to_smarty_php($this);
    }

    #line 228 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r1()
    {
        if ($this->yystack[ $this->yyidx + 0 ]->minor != null) {
            $this->current_buffer->append_subtree($this, $this->yystack[ $this->yyidx + 0 ]->minor);
        }
    }

    #line 235 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r2()
    {
        if ($this->yystack[ $this->yyidx + 0 ]->minor != null) {
            // because of possible code injection
            $this->current_buffer->append_subtree($this, $this->yystack[ $this->yyidx + 0 ]->minor);
        }
    }

    #line 249 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r4()
    {
        if ($this->compiler->has_code) {
            $this->_retvalue = $this->mergePrefixCode($this->yystack[ $this->yyidx + 0 ]->minor);
        } else {
            $this->_retvalue = null;
        }
        $this->compiler->has_variable_string = false;
        $this->block_nesting_level = count($this->compiler->_tag_stack);
    }

    #line 260 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r5()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Text($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 264 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r6()
    {
        $code = $this->compiler->compileTag('private_php',
                                            array(array('code' => $this->yystack[ $this->yyidx + 0 ]->minor),
                                                  array('type' => $this->lex->phpType)), array());
        if ($this->compiler->has_code && !empty($code)) {
            $tmp = '';
            foreach ($this->compiler->prefix_code as $code) {
                $tmp .= $code;
            }
            $this->compiler->prefix_code = array();
            $this->_retvalue =
                new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode($tmp . $code, true));
        } else {
            $this->_retvalue = null;
        }
    }

    #line 275 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r7()
    {
        $this->compiler->tag_nocache = true;
        $save = $this->template->compiled->has_nocache_code;
        $this->_retvalue = new Smarty_Internal_ParseTree_Tag($this,
                                                             $this->compiler->processNocacheCode("<?php echo '{$this->yystack[$this->yyidx + 0]->minor}';?>\n",
                                                                                                 $this->compiler,
                                                                                                 true));
        $this->template->compiled->has_nocache_code = $save;
    }

    #line 282 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r8()
    {
        $this->_retvalue = $this->compiler->processText($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 286 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r9()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 290 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r10()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + - 1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 295 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r11()
    {
        $this->strip = true;
    }

    #line 299 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r12()
    {
        $this->strip = false;
    }

    #line 304 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r13()
    {
        $this->_retvalue = '';
    }

    #line 308 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r14()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + - 1 ]->minor;
    }

    #line 312 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r15()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + - 1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 328 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r19()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + - 1 ]->minor;
    }

    #line 334 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r20()
    {
        $var =
            trim(substr($this->yystack[ $this->yyidx + 0 ]->minor, $this->lex->ldel_length, - $this->lex->rdel_length),
                 ' $');
        if (preg_match('/^(.*)(\s+nocache)$/', $var, $match)) {
            $this->_retvalue = $this->compiler->compileTag('private_print_expression', array('nocache'),
                                                           array('value' => $this->compiler->compileVariable('\'' .
                                                                                                             $match[ 1 ] .
                                                                                                             '\'')));
        } else {
            $this->_retvalue = $this->compiler->compileTag('private_print_expression', array(),
                                                           array('value' => $this->compiler->compileVariable('\'' .
                                                                                                             $var .
                                                                                                             '\'')));
        }
    }

    #line 344 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r21()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression', array(),
                                                       array('value' => $this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 348 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r22()
    {
        $this->_retvalue =
            $this->compiler->compileTag('private_print_expression', $this->yystack[ $this->yyidx + 0 ]->minor,
                                        array('value' => $this->yystack[ $this->yyidx + - 1 ]->minor));
    }

    #line 371 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r27()
    {
        $this->_retvalue = $this->compiler->compileTag('assign', array(array('value' => $this->yystack[ $this->yyidx +
                                                                                                        0 ]->minor),
                                                                       array('var' => '\'' .
                                                                                      substr($this->yystack[ $this->yyidx +
                                                                                                             - 2 ]->minor,
                                                                                             1) . '\'')));
    }

    #line 379 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r29()
    {
        $this->_retvalue = $this->compiler->compileTag('assign',
                                                       array_merge(array(array('value' => $this->yystack[ $this->yyidx +
                                                                                                          - 1 ]->minor),
                                                                         array('var' => '\'' .
                                                                                        substr($this->yystack[ $this->yyidx +
                                                                                                               - 3 ]->minor,
                                                                                               1) . '\'')),
                                                                   $this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 383 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r30()
    {
        $this->_retvalue = $this->compiler->compileTag('assign',
                                                       array_merge(array(array('value' => $this->yystack[ $this->yyidx +
                                                                                                          - 1 ]->minor),
                                                                         array('var' => $this->yystack[ $this->yyidx +
                                                                                                        - 3 ]->minor[ 'var' ])),
                                                                   $this->yystack[ $this->yyidx + 0 ]->minor),
                                                       array('smarty_internal_index' => $this->yystack[ $this->yyidx +
                                                                                                        - 3 ]->minor[ 'smarty_internal_index' ]));
    }

    #line 388 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r31()
    {
        $tag =
            trim(substr($this->yystack[ $this->yyidx + 0 ]->minor, $this->lex->ldel_length, - $this->lex->rdel_length));
        if ($tag == 'strip') {
            $this->strip = true;
            $this->_retvalue = null;;
        } else {
            if (defined($tag)) {
                if ($this->security) {
                    $this->security->isTrustedConstant($tag, $this->compiler);
                }
                $this->_retvalue =
                    $this->compiler->compileTag('private_print_expression', array(), array('value' => $tag));
            } else {
                if (preg_match('/^(.*)(\s+nocache)$/', $tag, $match)) {
                    $this->_retvalue = $this->compiler->compileTag($match[ 1 ], array("'nocache'"));
                } else {
                    $this->_retvalue = $this->compiler->compileTag($tag, array());
                }
            }
        }
    }

    #line 410 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r32()
    {
        if (defined($this->yystack[ $this->yyidx + - 1 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + - 1 ]->minor, $this->compiler);
            }
            $this->_retvalue =
                $this->compiler->compileTag('private_print_expression', $this->yystack[ $this->yyidx + 0 ]->minor,
                                            array('value' => $this->yystack[ $this->yyidx + - 1 ]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + - 1 ]->minor,
                                                           $this->yystack[ $this->yyidx + 0 ]->minor);
        }
    }

    #line 420 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r33()
    {
        if (defined($this->yystack[ $this->yyidx + 0 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression', array(),
                                                           array('value' => $this->yystack[ $this->yyidx + 0 ]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + 0 ]->minor, array());
        }
    }

    #line 433 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r34()
    {
        if (defined($this->yystack[ $this->yyidx + - 2 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + - 2 ]->minor, $this->compiler);
            }
            $this->_retvalue =
                $this->compiler->compileTag('private_print_expression', $this->yystack[ $this->yyidx + 0 ]->minor,
                                            array('value' => $this->yystack[ $this->yyidx + - 2 ]->minor,
                                                  'modifierlist' => $this->yystack[ $this->yyidx + - 1 ]->minor));
        } else {
            $this->_retvalue = '<?php ob_start();?>' .
                               $this->compiler->compileTag($this->yystack[ $this->yyidx + - 2 ]->minor,
                                                           $this->yystack[ $this->yyidx + 0 ]->minor) . '<?php echo ';
            $this->_retvalue .= $this->compiler->compileTag('private_modifier', array(),
                                                            array('modifierlist' => $this->yystack[ $this->yyidx +
                                                                                                    - 1 ]->minor,
                                                                  'value' => 'ob_get_clean()')) . ';?>';
        }
    }

    #line 446 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r35()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + - 3 ]->minor,
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                - 1 ]->minor));
    }

    #line 451 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r36()
    {
        $this->_retvalue = '<?php ob_start();?>' .
                           $this->compiler->compileTag($this->yystack[ $this->yyidx + - 4 ]->minor,
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                - 2 ]->minor)) .
                           '<?php echo ';
        $this->_retvalue .= $this->compiler->compileTag('private_modifier', array(),
                                                        array('modifierlist' => $this->yystack[ $this->yyidx +
                                                                                                - 1 ]->minor,
                                                              'value' => 'ob_get_clean()')) . ';?>';
    }

    #line 457 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r37()
    {
        $this->_retvalue = $this->compiler->compileTag('make_nocache', array(array('var' => '\'' .
                                                                                            substr($this->yystack[ $this->yyidx +
                                                                                                                   0 ]->minor,
                                                                                                   1) . '\'')));
    }

    #line 462 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r38()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + - 1 ]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag, array(),
                                                       array('if condition' => $this->yystack[ $this->yyidx +
                                                                                               0 ]->minor));
    }

    #line 467 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r39()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + - 2 ]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag,
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('if condition' => $this->yystack[ $this->yyidx +
                                                                                               - 1 ]->minor));
    }

    #line 472 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r40()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + - 1 ]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag, array(),
                                                       array('if condition' => $this->yystack[ $this->yyidx +
                                                                                               0 ]->minor));
    }

    #line 483 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r42()
    {
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                          array(array('start' => $this->yystack[ $this->yyidx +
                                                                                                                 - 6 ]->minor),
                                                                                array('ifexp' => $this->yystack[ $this->yyidx +
                                                                                                                 - 4 ]->minor),
                                                                                array('var' => $this->yystack[ $this->yyidx +
                                                                                                               - 2 ]->minor),
                                                                                array('step' => $this->yystack[ $this->yyidx +
                                                                                                                - 1 ]->minor))),
                                                       1);
    }

    #line 487 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r43()
    {
        $this->_retvalue = '=' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 495 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r45()
    {
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                          array(array('start' => $this->yystack[ $this->yyidx +
                                                                                                                 - 3 ]->minor),
                                                                                array('to' => $this->yystack[ $this->yyidx +
                                                                                                              - 1 ]->minor))),
                                                       0);
    }

    #line 499 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r46()
    {
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                          array(array('start' => $this->yystack[ $this->yyidx +
                                                                                                                 - 5 ]->minor),
                                                                                array('to' => $this->yystack[ $this->yyidx +
                                                                                                              - 3 ]->minor),
                                                                                array('step' => $this->yystack[ $this->yyidx +
                                                                                                                - 1 ]->minor))),
                                                       0);
    }

    #line 504 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r47()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 509 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r48()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                              array(array('from' => $this->yystack[ $this->yyidx +
                                                                                                                    - 3 ]->minor),
                                                                                    array('item' => $this->yystack[ $this->yyidx +
                                                                                                                    - 1 ]->minor))));
    }

    #line 513 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r49()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                              array(array('from' => $this->yystack[ $this->yyidx +
                                                                                                                    - 5 ]->minor),
                                                                                    array('item' => $this->yystack[ $this->yyidx +
                                                                                                                    - 1 ]->minor),
                                                                                    array('key' => $this->yystack[ $this->yyidx +
                                                                                                                   - 3 ]->minor))));
    }

    #line 526 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r52()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter', array(),
                                                       array('modifier_list' => array(array_merge(array($this->yystack[ $this->yyidx +
                                                                                                                        - 1 ]->minor),
                                                                                                  $this->yystack[ $this->yyidx +
                                                                                                                  0 ]->minor))));
    }

    #line 530 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r53()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter', array(),
                                                       array('modifier_list' => array_merge(array(array_merge(array($this->yystack[ $this->yyidx +
                                                                                                                                    - 2 ]->minor),
                                                                                                              $this->yystack[ $this->yyidx +
                                                                                                                              - 1 ]->minor)),
                                                                                            $this->yystack[ $this->yyidx +
                                                                                                            0 ]->minor)));
    }

    #line 535 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r54()
    {
        $j = strrpos($this->yystack[ $this->yyidx + 0 ]->minor, '.');
        if ($this->yystack[ $this->yyidx + 0 ]->minor[ $j + 1 ] == 'c') {
            // {$smarty.block.child}
            $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileChildBlock($this->compiler);
        } else {
            // {$smarty.block.parent}
            $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileParentBlock($this->compiler);
        }
    }

    #line 548 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r55()
    {
        $tag =
            trim(substr($this->yystack[ $this->yyidx + 0 ]->minor, $this->lex->ldel_length, - $this->lex->rdel_length),
                 ' /');
        if ($tag == 'strip') {
            $this->strip = false;
            $this->_retvalue = null;
        } else {
            $this->_retvalue = $this->compiler->compileTag($tag . 'close', array());
        }
    }

    #line 557 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r56()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + 0 ]->minor . 'close', array());
    }

    #line 561 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r57()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + - 1 ]->minor . 'close', array(),
                                                       array('modifier_list' => $this->yystack[ $this->yyidx +
                                                                                                0 ]->minor));
    }

    #line 566 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r58()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + - 2 ]->minor . 'close', array(),
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                0 ]->minor));
    }

    #line 570 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r59()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + - 3 ]->minor . 'close', array(),
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                - 1 ]->minor,
                                                             'modifier_list' => $this->yystack[ $this->yyidx +
                                                                                                0 ]->minor));
    }

    #line 578 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r60()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + - 1 ]->minor;
        $this->_retvalue[] = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 584 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r61()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 589 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r62()
    {
        $this->_retvalue = array();
    }

    #line 594 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r63()
    {
        if (defined($this->yystack[ $this->yyidx + 0 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler);
            }
            $this->_retvalue =
                array($this->yystack[ $this->yyidx + - 2 ]->minor => $this->yystack[ $this->yyidx + 0 ]->minor);
        } else {
            $this->_retvalue =
                array($this->yystack[ $this->yyidx + - 2 ]->minor => '\'' . $this->yystack[ $this->yyidx + 0 ]->minor .
                                                                     '\'');
        }
    }

    #line 605 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r64()
    {
        $this->_retvalue =
            array(trim($this->yystack[ $this->yyidx + - 1 ]->minor, " =\n\r\t") => $this->yystack[ $this->yyidx +
                                                                                                   0 ]->minor);
    }

    #line 613 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r66()
    {
        $this->_retvalue = '\'' . $this->yystack[ $this->yyidx + 0 ]->minor . '\'';
    }

    #line 625 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r69()
    {
        $this->_retvalue =
            array($this->yystack[ $this->yyidx + - 2 ]->minor => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 638 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r71()
    {
        $this->yystack[ $this->yyidx + - 2 ]->minor[] = $this->yystack[ $this->yyidx + 0 ]->minor;
        $this->_retvalue = $this->yystack[ $this->yyidx + - 2 ]->minor;
    }

    #line 643 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r72()
    {
        $this->_retvalue = array('var' => '\'' . substr($this->yystack[ $this->yyidx + - 2 ]->minor, 1) . '\'',
                                 'value' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 650 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r74()
    {
        $this->_retvalue = array('var' => $this->yystack[ $this->yyidx + - 2 ]->minor,
                                 'value' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 674 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r78()
    {
        $this->_retvalue =
            '$_smarty_tpl->getStreamVariable(\'' . substr($this->yystack[ $this->yyidx + - 2 ]->minor, 1) . '://' .
            $this->yystack[ $this->yyidx + 0 ]->minor . '\')';
    }

    #line 679 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r79()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + - 2 ]->minor . trim($this->yystack[ $this->yyidx + - 1 ]->minor) .
            $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 693 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r82()
    {
        $this->_retvalue = $this->compiler->compileTag('private_modifier', array(),
                                                       array('value' => $this->yystack[ $this->yyidx + - 1 ]->minor,
                                                             'modifierlist' => $this->yystack[ $this->yyidx +
                                                                                               0 ]->minor));
    }

    #line 699 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r83()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + - 1 ]->minor[ 'pre' ] . $this->yystack[ $this->yyidx + - 2 ]->minor .
            $this->yystack[ $this->yyidx + - 1 ]->minor[ 'op' ] . $this->yystack[ $this->yyidx + 0 ]->minor . ')';
    }

    #line 703 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r84()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + - 2 ]->minor . $this->yystack[ $this->yyidx + - 1 ]->minor .
                           $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 707 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r85()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + 0 ]->minor . $this->yystack[ $this->yyidx + - 1 ]->minor . ')';
    }

    #line 711 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r86()
    {
        $this->_retvalue = 'in_array(' . $this->yystack[ $this->yyidx + - 2 ]->minor . ',' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ')';
    }

    #line 715 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r87()
    {
        $this->_retvalue = 'in_array(' . $this->yystack[ $this->yyidx + - 2 ]->minor . ',(array)' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ')';
    }

    #line 719 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r88()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + - 2 ]->minor . $this->yystack[ $this->yyidx + - 1 ]->minor .
                           $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 731 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r90()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + - 5 ]->minor . ' ? ' . $this->compiler->compileVariable('\'' .
                                                                                                                  substr($this->yystack[ $this->yyidx +
                                                                                                                                         - 2 ]->minor,
                                                                                                                         1) .
                                                                                                                  '\'') .
                           ' : ' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 735 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r91()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + - 5 ]->minor . ' ? ' . $this->yystack[ $this->yyidx + - 2 ]->minor . ' : ' .
            $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 750 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r94()
    {
        $this->_retvalue = '!' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 771 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r99()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + - 2 ]->minor . '.' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 775 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r100()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + - 1 ]->minor . '.';
    }

    #line 779 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r101()
    {
        $this->_retvalue = '.' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 784 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r102()
    {
        if (defined($this->yystack[ $this->yyidx + 0 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
        } else {
            $this->_retvalue = '\'' . $this->yystack[ $this->yyidx + 0 ]->minor . '\'';
        }
    }

    #line 801 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r104()
    {
        $this->_retvalue = "(" . $this->yystack[ $this->yyidx + - 1 ]->minor . ")";
    }

    #line 816 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r107()
    {
        $prefixVar = $this->compiler->getNewPrefixVariable();
        if ($this->yystack[ $this->yyidx + - 2 ]->minor[ 'var' ] == '\'smarty\'') {
            $this->compiler->appendPrefixCode("<?php $prefixVar" . ' = ' .
                                              $this->compiler->compileTag('private_special_variable', array(),
                                                                          $this->yystack[ $this->yyidx +
                                                                                          - 2 ]->minor[ 'smarty_internal_index' ]) .
                                              ';?>');
        } else {
            $this->compiler->appendPrefixCode("<?php $prefixVar" . ' = ' .
                                              $this->compiler->compileVariable($this->yystack[ $this->yyidx +
                                                                                               - 2 ]->minor[ 'var' ]) .
                                              $this->yystack[ $this->yyidx + - 2 ]->minor[ 'smarty_internal_index' ] .
                                              ';?>');
        }
        $this->_retvalue = $prefixVar . '::' . $this->yystack[ $this->yyidx + 0 ]->minor[ 0 ] .
                           $this->yystack[ $this->yyidx + 0 ]->minor[ 1 ];
    }

    #line 827 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r108()
    {
        $prefixVar = $this->compiler->getNewPrefixVariable();
        $tmp = $this->compiler->appendCode('<?php ob_start();?>', $this->yystack[ $this->yyidx + 0 ]->minor);
        $this->compiler->appendPrefixCode($this->compiler->appendCode($tmp, "<?php $prefixVar" . '=ob_get_clean();?>'));
        $this->_retvalue = $prefixVar;
    }

    #line 844 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r111()
    {
        if (!in_array(strtolower($this->yystack[ $this->yyidx + - 2 ]->minor), array('self', 'parent')) &&
            (!$this->security ||
             $this->security->isTrustedStaticClassAccess($this->yystack[ $this->yyidx + - 2 ]->minor,
                                                         $this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler))
        ) {
            if (isset($this->smarty->registered_classes[ $this->yystack[ $this->yyidx + - 2 ]->minor ])) {
                $this->_retvalue =
                    $this->smarty->registered_classes[ $this->yystack[ $this->yyidx + - 2 ]->minor ] . '::' .
                    $this->yystack[ $this->yyidx + 0 ]->minor[ 0 ] . $this->yystack[ $this->yyidx + 0 ]->minor[ 1 ];
            } else {
                $this->_retvalue = $this->yystack[ $this->yyidx + - 2 ]->minor . '::' .
                                   $this->yystack[ $this->yyidx + 0 ]->minor[ 0 ] .
                                   $this->yystack[ $this->yyidx + 0 ]->minor[ 1 ];
            }
        } else {
            $this->compiler->trigger_template_error("static class '" . $this->yystack[ $this->yyidx + - 2 ]->minor .
                                                    "' is undefined or not allowed by security setting");
        }
    }

    #line 863 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r113()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 874 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r114()
    {
        $this->_retvalue =
            $this->compiler->compileVariable('\'' . substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) . '\'');
    }

    #line 877 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r115()
    {
        if ($this->yystack[ $this->yyidx + 0 ]->minor[ 'var' ] == '\'smarty\'') {
            $smarty_var = $this->compiler->compileTag('private_special_variable', array(),
                                                      $this->yystack[ $this->yyidx +
                                                                      0 ]->minor[ 'smarty_internal_index' ]);
            $this->_retvalue = $smarty_var;
        } else {
            // used for array reset,next,prev,end,current
            $this->last_variable = $this->yystack[ $this->yyidx + 0 ]->minor[ 'var' ];
            $this->last_index = $this->yystack[ $this->yyidx + 0 ]->minor[ 'smarty_internal_index' ];
            $this->_retvalue = $this->compiler->compileVariable($this->yystack[ $this->yyidx + 0 ]->minor[ 'var' ]) .
                               $this->yystack[ $this->yyidx + 0 ]->minor[ 'smarty_internal_index' ];
        }
    }

    #line 890 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r116()
    {
        $this->_retvalue = '$_smarty_tpl->tpl_vars[' . $this->yystack[ $this->yyidx + - 2 ]->minor . ']->' .
                           $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 900 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r118()
    {
        $this->_retvalue =
            $this->compiler->compileConfigVariable("'" . $this->yystack[ $this->yyidx + - 1 ]->minor . "'");
    }

    #line 904 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r119()
    {
        $this->_retvalue = '(is_array($tmp = ' .
                           $this->compiler->compileConfigVariable("'" . $this->yystack[ $this->yyidx + - 2 ]->minor .
                                                                  "'") . ') ? $tmp' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ' :null)';
    }

    #line 908 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r120()
    {
        $this->_retvalue = $this->compiler->compileConfigVariable($this->yystack[ $this->yyidx + - 1 ]->minor);
    }

    #line 912 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r121()
    {
        $this->_retvalue =
            '(is_array($tmp = ' . $this->compiler->compileConfigVariable($this->yystack[ $this->yyidx + - 2 ]->minor) .
            ') ? $tmp' . $this->yystack[ $this->yyidx + 0 ]->minor . ' : null)';
    }

    #line 916 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r122()
    {
        $this->_retvalue = array('var' => '\'' . substr($this->yystack[ $this->yyidx + - 1 ]->minor, 1) . '\'',
                                 'smarty_internal_index' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 919 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r123()
    {
        $this->_retvalue = array('var' => $this->yystack[ $this->yyidx + - 1 ]->minor,
                                 'smarty_internal_index' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 932 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r125()
    {
        return;
    }

    #line 938 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r126()
    {
        $this->_retvalue =
            '[' . $this->compiler->compileVariable('\'' . substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) . '\'') .
            ']';
    }

    #line 941 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r127()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable($this->yystack[ $this->yyidx + 0 ]->minor) . ']';
    }

    #line 945 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r128()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable($this->yystack[ $this->yyidx + - 2 ]->minor) . '->' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ']';
    }

    #line 949 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r129()
    {
        $this->_retvalue = "['" . $this->yystack[ $this->yyidx + 0 ]->minor . "']";
    }

    #line 953 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r130()
    {
        $this->_retvalue = '[' . $this->yystack[ $this->yyidx + 0 ]->minor . ']';
    }

    #line 958 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r131()
    {
        $this->_retvalue = '[' . $this->yystack[ $this->yyidx + - 1 ]->minor . ']';
    }

    #line 963 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r132()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable', array(), '[\'section\'][\'' .
                                                                                                  $this->yystack[ $this->yyidx +
                                                                                                                  - 1 ]->minor .
                                                                                                  '\'][\'index\']') .
                           ']';
    }

    #line 967 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r133()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable', array(), '[\'section\'][\'' .
                                                                                                  $this->yystack[ $this->yyidx +
                                                                                                                  - 3 ]->minor .
                                                                                                  '\'][\'' .
                                                                                                  $this->yystack[ $this->yyidx +
                                                                                                                  - 1 ]->minor .
                                                                                                  '\']') . ']';
    }

    #line 970 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r134()
    {
        $this->_retvalue = '[' . $this->yystack[ $this->yyidx + - 1 ]->minor . ']';
    }

    #line 976 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r136()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable('\'' .
                                                                  substr($this->yystack[ $this->yyidx + - 1 ]->minor,
                                                                         1) . '\'') . ']';;
    }

    #line 992 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r140()
    {
        $this->_retvalue = '[]';
    }

    #line 1002 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r141()
    {
        $this->_retvalue = '\'' . substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) . '\'';
    }

    #line 1006 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r142()
    {
        $this->_retvalue = "''";
    }

    #line 1011 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r143()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + - 1 ]->minor . '.' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1019 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r145()
    {
        $var =
            trim(substr($this->yystack[ $this->yyidx + 0 ]->minor, $this->lex->ldel_length, - $this->lex->rdel_length),
                 ' $');
        $this->_retvalue = $this->compiler->compileVariable('\'' . $var . '\'');
    }

    #line 1025 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r146()
    {
        $this->_retvalue = '(' . $this->yystack[ $this->yyidx + - 1 ]->minor . ')';
    }

    #line 1032 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r147()
    {
        if ($this->yystack[ $this->yyidx + - 1 ]->minor[ 'var' ] == '\'smarty\'') {
            $this->_retvalue = $this->compiler->compileTag('private_special_variable', array(),
                                                           $this->yystack[ $this->yyidx +
                                                                           - 1 ]->minor[ 'smarty_internal_index' ]) .
                               $this->yystack[ $this->yyidx + 0 ]->minor;
        } else {
            $this->_retvalue = $this->compiler->compileVariable($this->yystack[ $this->yyidx + - 1 ]->minor[ 'var' ]) .
                               $this->yystack[ $this->yyidx + - 1 ]->minor[ 'smarty_internal_index' ] .
                               $this->yystack[ $this->yyidx + 0 ]->minor;
        }
    }

    #line 1041 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r148()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1046 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r149()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + - 1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1051 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r150()
    {
        if ($this->security && substr($this->yystack[ $this->yyidx + - 1 ]->minor, 0, 1) == '_') {
            $this->compiler->trigger_template_error(self::Err1);
        }
        $this->_retvalue =
            '->' . $this->yystack[ $this->yyidx + - 1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1058 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r151()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue = '->{' . $this->compiler->compileVariable($this->yystack[ $this->yyidx + - 1 ]->minor) .
                           $this->yystack[ $this->yyidx + 0 ]->minor . '}';
    }

    #line 1065 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r152()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue =
            '->{' . $this->yystack[ $this->yyidx + - 2 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor . '}';
    }

    #line 1072 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r153()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue = '->{\'' . $this->yystack[ $this->yyidx + - 4 ]->minor . '\'.' .
                           $this->yystack[ $this->yyidx + - 2 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor .
                           '}';
    }

    #line 1080 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r154()
    {
        $this->_retvalue = '->' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1088 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r155()
    {
        if (!$this->security ||
            $this->security->isTrustedPhpFunction($this->yystack[ $this->yyidx + - 3 ]->minor, $this->compiler)
        ) {
            if (strcasecmp($this->yystack[ $this->yyidx + - 3 ]->minor, 'isset') === 0 ||
                strcasecmp($this->yystack[ $this->yyidx + - 3 ]->minor, 'empty') === 0 ||
                strcasecmp($this->yystack[ $this->yyidx + - 3 ]->minor, 'array') === 0 ||
                is_callable($this->yystack[ $this->yyidx + - 3 ]->minor)
            ) {
                $func_name = strtolower($this->yystack[ $this->yyidx + - 3 ]->minor);
                if ($func_name == 'isset') {
                    if (count($this->yystack[ $this->yyidx + - 1 ]->minor) == 0) {
                        $this->compiler->trigger_template_error('Illegal number of paramer in "isset()"');
                    }
                    $par = implode(',', $this->yystack[ $this->yyidx + - 1 ]->minor);
                    if (strncasecmp($par, '$_smarty_tpl->smarty->ext->_config->_getConfigVariable',
                                    strlen('$_smarty_tpl->smarty->ext->_config->_getConfigVariable')) === 0
                    ) {
                        $prefixVar = $this->compiler->getNewPrefixVariable();
                        $this->compiler->appendPrefixCode("<?php $prefixVar" . '=' .
                                                          str_replace(')', ', false)', $par) . ';?>');
                        $isset_par = $prefixVar;
                    } else {
                        $isset_par = str_replace("')->value", "',null,true,false)->value", $par);
                    }
                    $this->_retvalue = $this->yystack[ $this->yyidx + - 3 ]->minor . "(" . $isset_par . ")";
                } elseif (in_array($func_name, array('empty', 'reset', 'current', 'end', 'prev', 'next'))) {
                    if (count($this->yystack[ $this->yyidx + - 1 ]->minor) != 1) {
                        $this->compiler->trigger_template_error('Illegal number of paramer in "empty()"');
                    }
                    if ($func_name == 'empty') {
                        $this->_retvalue = $func_name . '(' . str_replace("')->value", "',null,true,false)->value",
                                                                          $this->yystack[ $this->yyidx +
                                                                                          - 1 ]->minor[ 0 ]) . ')';
                    } else {
                        $this->_retvalue = $func_name . '(' . $this->yystack[ $this->yyidx + - 1 ]->minor[ 0 ] . ')';
                    }
                } else {
                    $this->_retvalue = $this->yystack[ $this->yyidx + - 3 ]->minor . "(" .
                                       implode(',', $this->yystack[ $this->yyidx + - 1 ]->minor) . ")";
                }
            } else {
                $this->compiler->trigger_template_error("unknown function \"" .
                                                        $this->yystack[ $this->yyidx + - 3 ]->minor . "\"");
            }
        }
    }

    #line 1127 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r156()
    {
        if ($this->security && substr($this->yystack[ $this->yyidx + - 3 ]->minor, 0, 1) == '_') {
            $this->compiler->trigger_template_error(self::Err1);
        }
        $this->_retvalue = $this->yystack[ $this->yyidx + - 3 ]->minor . "(" .
                           implode(',', $this->yystack[ $this->yyidx + - 1 ]->minor) . ")";
    }

    #line 1134 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r157()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $prefixVar = $this->compiler->getNewPrefixVariable();
        $this->compiler->appendPrefixCode("<?php $prefixVar" . '=' . $this->compiler->compileVariable('\'' .
                                                                                                      substr($this->yystack[ $this->yyidx +
                                                                                                                             - 3 ]->minor,
                                                                                                             1) .
                                                                                                      '\'') . ';?>');
        $this->_retvalue = $prefixVar . '(' . implode(',', $this->yystack[ $this->yyidx + - 1 ]->minor) . ')';
    }

    #line 1145 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r158()
    {
        $this->_retvalue =
            array_merge($this->yystack[ $this->yyidx + - 2 ]->minor, array($this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 1162 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r161()
    {
        $this->_retvalue = array_merge($this->yystack[ $this->yyidx + - 2 ]->minor,
                                       array(array_merge($this->yystack[ $this->yyidx + - 1 ]->minor,
                                                         $this->yystack[ $this->yyidx + 0 ]->minor)));
    }

    #line 1166 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r162()
    {
        $this->_retvalue =
            array(array_merge($this->yystack[ $this->yyidx + - 1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 1174 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r164()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1182 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r165()
    {
        $this->_retvalue =
            array_merge($this->yystack[ $this->yyidx + - 1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1201 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r169()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor, '', 'method');
    }

    #line 1206 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r170()
    {
        $this->_retvalue =
            array($this->yystack[ $this->yyidx + - 1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor, 'method');
    }

    #line 1211 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r171()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor, '');
    }

    #line 1216 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r172()
    {
        $this->_retvalue =
            array($this->yystack[ $this->yyidx + - 1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor, 'property');
    }

    #line 1221 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r173()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + - 2 ]->minor,
                                 $this->yystack[ $this->yyidx + - 1 ]->minor .
                                 $this->yystack[ $this->yyidx + 0 ]->minor, 'property');
    }

    #line 1227 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r174()
    {
        $this->_retvalue = ' ' . trim($this->yystack[ $this->yyidx + 0 ]->minor) . ' ';
    }

    #line 1231 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r175()
    {
        static $lops =
            array('eq' => ' == ', 'ne' => ' != ', 'neq' => ' != ', 'gt' => ' > ', 'ge' => ' >= ', 'gte' => ' >= ',
                  'lt' => ' < ', 'le' => ' <= ', 'lte' => ' <= ', 'mod' => ' % ', 'and' => ' && ', 'or' => ' || ',
                  'xor' => ' xor ',);
        $op = strtolower(preg_replace('/\s*/', '', $this->yystack[ $this->yyidx + 0 ]->minor));
        $this->_retvalue = $lops[ $op ];
    }

    #line 1250 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r176()
    {
        static $tlops =
            array('isdivby' => array('op' => ' % ', 'pre' => '!('), 'isnotdivby' => array('op' => ' % ', 'pre' => '('),
                  'isevenby' => array('op' => ' / ', 'pre' => '!(1 & '),
                  'isnotevenby' => array('op' => ' / ', 'pre' => '(1 & '),
                  'isoddby' => array('op' => ' / ', 'pre' => '(1 & '),
                  'isnotoddby' => array('op' => ' / ', 'pre' => '!(1 & '),);
        $op = strtolower(preg_replace('/\s*/', '', $this->yystack[ $this->yyidx + 0 ]->minor));
        $this->_retvalue = $tlops[ $op ];
    }

    #line 1263 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r177()
    {
        static $scond =
            array('iseven' => '!(1 & ', 'isnoteven' => '(1 & ', 'isodd' => '(1 & ', 'isnotodd' => '!(1 & ',);
        $op = strtolower(str_replace(' ', '', $this->yystack[ $this->yyidx + 0 ]->minor));
        $this->_retvalue = $scond[ $op ];
    }

    #line 1277 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r178()
    {
        $this->_retvalue = 'array(' . $this->yystack[ $this->yyidx + - 1 ]->minor . ')';
    }

    #line 1285 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r180()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + - 2 ]->minor . ',' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1293 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r182()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + - 2 ]->minor . '=>' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1297 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r183()
    {
        $this->_retvalue =
            '\'' . $this->yystack[ $this->yyidx + - 2 ]->minor . '\'=>' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1313 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r186()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + - 1 ]->minor->to_smarty_php($this);
    }

    #line 1318 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r187()
    {
        $this->yystack[ $this->yyidx + - 1 ]->minor->append_subtree($this, $this->yystack[ $this->yyidx + 0 ]->minor);
        $this->_retvalue = $this->yystack[ $this->yyidx + - 1 ]->minor;
    }

    #line 1323 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r188()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Dq($this, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1327 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r189()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)' . $this->yystack[ $this->yyidx + - 1 ]->minor);
    }

    #line 1335 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r191()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)$_smarty_tpl->tpl_vars[\'' .
                                                              substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) .
                                                              '\']->value');
    }

    #line 1343 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r193()
    {
        $this->_retvalue =
            new Smarty_Internal_ParseTree_Code('(string)(' . $this->yystack[ $this->yyidx + - 1 ]->minor . ')');
    }

    #line 1347 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r194()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Tag($this, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1351 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r195()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_DqContent($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    private $_retvalue;

    public function yy_reduce($yyruleno)
    {
        if ($this->yyTraceFILE && $yyruleno >= 0 && $yyruleno < count(self::$yyRuleName)) {
            fprintf($this->yyTraceFILE, "%sReduce (%d) [%s].\n", $this->yyTracePrompt, $yyruleno,
                    self::$yyRuleName[ $yyruleno ]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (isset(self::$yyReduceMap[ $yyruleno ])) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[ $yyruleno ]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[ $yyruleno ][ 0 ];
        $yysize = self::$yyRuleInfo[ $yyruleno ][ 1 ];
        $this->yyidx -= $yysize;
        for ($i = $yysize; $i; $i --) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[ $this->yyidx ]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!$this->yyTraceFILE && $yysize) {
                $this->yyidx ++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[ $this->yyidx ] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    public function yy_parse_failed()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sFail!\n", $this->yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    public function yy_syntax_error($yymajor, $TOKEN)
    {
        #line 200 "../smarty/lexer/smarty_internal_templateparser.y"

        $this->internalError = true;
        $this->yymajor = $yymajor;
        $this->compiler->trigger_template_error();
    }

    public function yy_accept()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sAccept!\n", $this->yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
        #line 193 "../smarty/lexer/smarty_internal_templateparser.y"

        $this->successful = !$this->internalError;
        $this->internalError = false;
        $this->retvalue = $this->_retvalue;
    }

    public function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = - 1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            $this->yystack[] = $x;
        }
        $yyendofinput = ($yymajor == 0);

        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sInput %s\n", $this->yyTracePrompt, $this->yyTokenName[ $yymajor ]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL && !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt --;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if ($this->yyTraceFILE) {
                    fprintf($this->yyTraceFILE, "%sSyntax Error!\n", $this->yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[ $this->yyidx ]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit) {
                        if ($this->yyTraceFILE) {
                            fprintf($this->yyTraceFILE, "%sDiscard input token %s\n", $this->yyTracePrompt,
                                    $this->yyTokenName[ $yymajor ]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 && $yymx != self::YYERRORSYMBOL &&
                               ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE) {
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor == 0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        }
        while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}

